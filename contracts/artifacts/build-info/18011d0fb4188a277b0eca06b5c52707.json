{
	"id": "18011d0fb4188a277b0eca06b5c52707",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"contracts/utils/MyStringUtils.sol\";\r\n\r\n// abstract contract MyERC20 is ERC20{\r\ncontract MyERC20{\r\n    // function toYuan(uint amount) internal pure returns (string memory yuan_str){\r\n    //     bytes memory amount_byte = bytes(Strings.toString(amount));\r\n    //     for(uint i=0; i<)\r\n    // }\r\n    function convertToSmallerUnit(uint number) public pure returns (string memory) {\r\n        uint decimal = 18;\r\n        bytes memory entireNumber = abi.encode(number);\r\n        // 得到前面部分\r\n        uint dividedNumber = number / 10**18; \r\n        string memory convertedNumber = Strings.toString(dividedNumber); \r\n\r\n        // 得到后18位\r\n        bytes memory lastNumber = new bytes(decimal);\r\n        uint len = getUintLength(number);\r\n        uint j=1;\r\n        for(uint i=decimal-1; i>0; i--){\r\n            if(len-j>=0){\r\n                bytes1 c = entireNumber[len-j];\r\n                lastNumber[i] = c;\r\n            }else{\r\n                lastNumber[i] = '0';\r\n            }\r\n            j++;\r\n        }\r\n        return string(abi.encodePacked(abi.encodePacked(convertedNumber, \".\"), lastNumber)); \r\n    }\r\n    function getUintLength(uint number) public pure returns (uint) {\r\n        uint length;\r\n        while (number != 0) {\r\n            length++;\r\n            number /= 10;\r\n        }\r\n        return length;\r\n    }\r\n}"
			},
			"contracts/utils/MyStringUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// author: @GentleXu\r\npragma solidity ^0.8;\r\nlibrary MyStringUtils{\r\n    function strcat(string memory str1, string memory str2) public pure returns(string memory) {\r\n        bytes memory s1 = bytes(str1);\r\n        bytes memory s2 = bytes(str2);\r\n        bytes memory res = new bytes(s1.length + s2.length);\r\n        for(uint i=0; i<s1.length; i++){\r\n            res[i] = s1[i];\r\n        }\r\n        for(uint i=0; i<s2.length; i++){\r\n            res[s1.length + i] = s2[i];\r\n        }\r\n        return string(res);\r\n    }\r\n    function substring(string memory str, uint startInd, uint endInd) public pure returns(string memory){\r\n        bytes memory strBytes = bytes(str);\r\n        bytes memory endStr = new bytes(endInd - startInd);\r\n        for(uint i=startInd; i<endInd; i++){\r\n            endStr[i-startInd] = strBytes[i];\r\n        }\r\n        return string(endStr);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyERC20.sol",
								"contracts/utils/MyStringUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyERC20.sol",
								"contracts/utils/MyStringUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyERC20.sol",
								"contracts/utils/MyStringUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyERC20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "convertToSmallerUnit",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "getUintLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyERC20.sol\":253:1514  contract MyERC20{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyERC20.sol\":253:1514  contract MyERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x212e31d6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x661a03da\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyERC20.sol\":473:1296  function convertToSmallerUnit(uint number) public pure returns (string memory) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyERC20.sol\":1302:1511  function getUintLength(uint number) public pure returns (uint) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyERC20.sol\":473:1296  function convertToSmallerUnit(uint number) public pure returns (string memory) {... */\n    tag_8:\n        /* \"contracts/MyERC20.sol\":537:550  string memory */\n      0x60\n        /* \"contracts/MyERC20.sol\":563:575  uint decimal */\n      0x00\n        /* \"contracts/MyERC20.sol\":578:580  18 */\n      0x12\n        /* \"contracts/MyERC20.sol\":563:580  uint decimal = 18 */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":591:616  bytes memory entireNumber */\n      0x00\n        /* \"contracts/MyERC20.sol\":630:636  number */\n      dup4\n        /* \"contracts/MyERC20.sol\":619:637  abi.encode(number) */\n      add(0x20, mload(0x40))\n      tag_17\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyERC20.sol\":591:637  bytes memory entireNumber = abi.encode(number) */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":679:697  uint dividedNumber */\n      0x00\n        /* \"contracts/MyERC20.sol\":709:715  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyERC20.sol\":700:706  number */\n      dup6\n        /* \"contracts/MyERC20.sol\":700:715  number / 10**18 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/MyERC20.sol\":679:715  uint dividedNumber = number / 10**18 */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":727:756  string memory convertedNumber */\n      0x00\n        /* \"contracts/MyERC20.sol\":759:790  Strings.toString(dividedNumber) */\n      tag_20\n        /* \"contracts/MyERC20.sol\":776:789  dividedNumber */\n      dup3\n        /* \"contracts/MyERC20.sol\":759:775  Strings.toString */\n      tag_21\n        /* \"contracts/MyERC20.sol\":759:790  Strings.toString(dividedNumber) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/MyERC20.sol\":727:790  string memory convertedNumber = Strings.toString(dividedNumber) */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":831:854  bytes memory lastNumber */\n      0x00\n        /* \"contracts/MyERC20.sol\":867:874  decimal */\n      dup5\n        /* \"contracts/MyERC20.sol\":857:875  new bytes(decimal) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n    tag_22:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_25:\n      pop\n        /* \"contracts/MyERC20.sol\":831:875  bytes memory lastNumber = new bytes(decimal) */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":886:894  uint len */\n      0x00\n        /* \"contracts/MyERC20.sol\":897:918  getUintLength(number) */\n      tag_26\n        /* \"contracts/MyERC20.sol\":911:917  number */\n      dup9\n        /* \"contracts/MyERC20.sol\":897:910  getUintLength */\n      tag_13\n        /* \"contracts/MyERC20.sol\":897:918  getUintLength(number) */\n      jump\t// in\n    tag_26:\n        /* \"contracts/MyERC20.sol\":886:918  uint len = getUintLength(number) */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":929:935  uint j */\n      0x00\n        /* \"contracts/MyERC20.sol\":936:937  1 */\n      0x01\n        /* \"contracts/MyERC20.sol\":929:937  uint j=1 */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":952:958  uint i */\n      0x00\n        /* \"contracts/MyERC20.sol\":967:968  1 */\n      0x01\n        /* \"contracts/MyERC20.sol\":959:966  decimal */\n      dup9\n        /* \"contracts/MyERC20.sol\":959:968  decimal-1 */\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/MyERC20.sol\":952:968  uint i=decimal-1 */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":948:1194  for(uint i=decimal-1; i>0; i--){... */\n    tag_27:\n        /* \"contracts/MyERC20.sol\":972:973  0 */\n      0x00\n        /* \"contracts/MyERC20.sol\":970:971  i */\n      dup2\n        /* \"contracts/MyERC20.sol\":970:973  i>0 */\n      gt\n        /* \"contracts/MyERC20.sol\":948:1194  for(uint i=decimal-1; i>0; i--){... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/MyERC20.sol\":1004:1005  0 */\n      0x00\n        /* \"contracts/MyERC20.sol\":1001:1002  j */\n      dup3\n        /* \"contracts/MyERC20.sol\":997:1000  len */\n      dup5\n        /* \"contracts/MyERC20.sol\":997:1002  len-j */\n      tag_32\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_32:\n        /* \"contracts/MyERC20.sol\":997:1005  len-j>=0 */\n      lt\n        /* \"contracts/MyERC20.sol\":994:1165  if(len-j>=0){... */\n      tag_33\n      jumpi\n        /* \"contracts/MyERC20.sol\":1025:1033  bytes1 c */\n      0x00\n        /* \"contracts/MyERC20.sol\":1036:1048  entireNumber */\n      dup8\n        /* \"contracts/MyERC20.sol\":1053:1054  j */\n      dup4\n        /* \"contracts/MyERC20.sol\":1049:1052  len */\n      dup6\n        /* \"contracts/MyERC20.sol\":1049:1054  len-j */\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n        /* \"contracts/MyERC20.sol\":1036:1055  entireNumber[len-j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n    tag_35:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/MyERC20.sol\":1025:1055  bytes1 c = entireNumber[len-j] */\n      swap1\n      pop\n        /* \"contracts/MyERC20.sol\":1090:1091  c */\n      dup1\n        /* \"contracts/MyERC20.sol\":1074:1084  lastNumber */\n      dup6\n        /* \"contracts/MyERC20.sol\":1085:1086  i */\n      dup4\n        /* \"contracts/MyERC20.sol\":1074:1087  lastNumber[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_38\n      jumpi\n      tag_39\n      tag_37\n      jump\t// in\n    tag_39:\n    tag_38:\n      0x20\n      add\n      add\n        /* \"contracts/MyERC20.sol\":1074:1091  lastNumber[i] = c */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/MyERC20.sol\":1006:1107  {... */\n      pop\n        /* \"contracts/MyERC20.sol\":994:1165  if(len-j>=0){... */\n      jump(tag_40)\n    tag_33:\n        /* \"contracts/MyERC20.sol\":1130:1149  lastNumber[i] = '0' */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyERC20.sol\":1130:1140  lastNumber */\n      dup5\n        /* \"contracts/MyERC20.sol\":1141:1142  i */\n      dup3\n        /* \"contracts/MyERC20.sol\":1130:1143  lastNumber[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_41\n      jumpi\n      tag_42\n      tag_37\n      jump\t// in\n    tag_42:\n    tag_41:\n      0x20\n      add\n      add\n        /* \"contracts/MyERC20.sol\":1130:1149  lastNumber[i] = '0' */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/MyERC20.sol\":994:1165  if(len-j>=0){... */\n    tag_40:\n        /* \"contracts/MyERC20.sol\":1179:1182  j++ */\n      dup2\n      dup1\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      swap3\n      pop\n      pop\n        /* \"contracts/MyERC20.sol\":975:978  i-- */\n      dup1\n      dup1\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      swap2\n      pop\n      pop\n        /* \"contracts/MyERC20.sol\":948:1194  for(uint i=decimal-1; i>0; i--){... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"contracts/MyERC20.sol\":1252:1267  convertedNumber */\n      dup4\n        /* \"contracts/MyERC20.sol\":1235:1273  abi.encodePacked(convertedNumber, \".\") */\n      add(0x20, mload(0x40))\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyERC20.sol\":1275:1285  lastNumber */\n      dup4\n        /* \"contracts/MyERC20.sol\":1218:1286  abi.encodePacked(abi.encodePacked(convertedNumber, \".\"), lastNumber) */\n      add(0x20, mload(0x40))\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyERC20.sol\":1204:1287  return string(abi.encodePacked(abi.encodePacked(convertedNumber, \".\"), lastNumber)) */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyERC20.sol\":473:1296  function convertToSmallerUnit(uint number) public pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyERC20.sol\":1302:1511  function getUintLength(uint number) public pure returns (uint) {... */\n    tag_13:\n        /* \"contracts/MyERC20.sol\":1359:1363  uint */\n      0x00\n        /* \"contracts/MyERC20.sol\":1376:1387  uint length */\n      dup1\n        /* \"contracts/MyERC20.sol\":1398:1480  while (number != 0) {... */\n    tag_52:\n        /* \"contracts/MyERC20.sol\":1415:1416  0 */\n      0x00\n        /* \"contracts/MyERC20.sol\":1405:1411  number */\n      dup4\n        /* \"contracts/MyERC20.sol\":1405:1416  number != 0 */\n      eq\n        /* \"contracts/MyERC20.sol\":1398:1480  while (number != 0) {... */\n      tag_53\n      jumpi\n        /* \"contracts/MyERC20.sol\":1433:1441  length++ */\n      dup1\n      dup1\n      tag_54\n      swap1\n      tag_44\n      jump\t// in\n    tag_54:\n      swap2\n      pop\n      pop\n        /* \"contracts/MyERC20.sol\":1466:1468  10 */\n      0x0a\n        /* \"contracts/MyERC20.sol\":1456:1468  number /= 10 */\n      dup4\n      tag_55\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_55:\n      swap3\n      pop\n        /* \"contracts/MyERC20.sol\":1398:1480  while (number != 0) {... */\n      jump(tag_52)\n    tag_53:\n        /* \"contracts/MyERC20.sol\":1497:1503  length */\n      dup1\n        /* \"contracts/MyERC20.sol\":1490:1503  return length */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyERC20.sol\":1302:1511  function getUintLength(uint number) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_57\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_58\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_59\n      jumpi\n      tag_60\n      tag_24\n      jump\t// in\n    tag_60:\n    tag_59:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_61:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_64\n      jumpi\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n    tag_64:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_69\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_70\n      jumpi\n      tag_71\n      tag_66\n      jump\t// in\n    tag_71:\n    tag_70:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_72\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_73\n      jumpi\n      tag_74\n      tag_66\n      jump\t// in\n    tag_74:\n    tag_73:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_76\n      jumpi\n      tag_77\n      tag_66\n      jump\t// in\n    tag_77:\n    tag_76:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_79\n      jumpi\n      tag_80\n      tag_66\n      jump\t// in\n    tag_80:\n    tag_79:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_82\n      jumpi\n      tag_83\n      tag_66\n      jump\t// in\n    tag_83:\n    tag_82:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_85\n      jumpi\n      tag_86\n      tag_66\n      jump\t// in\n    tag_86:\n    tag_85:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_92:\n        /* \"#utility.yul\":490:514   */\n      tag_114\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_91\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_115:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_93:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_117\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_92\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_120\n      tag_89\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":766:885   */\n    tag_119:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_121\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_93\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_94:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1299   */\n    tag_95:\n        /* \"#utility.yul\":1214:1225   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1243:1246   */\n      dup3\n        /* \"#utility.yul\":1236:1255   */\n      mstore\n        /* \"#utility.yul\":1288:1292   */\n      0x20\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1279:1293   */\n      add\n        /* \"#utility.yul\":1264:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1551   */\n    tag_96:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1396:1509   */\n    tag_125:\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1407:1408   */\n      dup2\n        /* \"#utility.yul\":1404:1417   */\n      lt\n        /* \"#utility.yul\":1396:1509   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1486:1497   */\n      add\n        /* \"#utility.yul\":1480:1498   */\n      mload\n        /* \"#utility.yul\":1476:1477   */\n      dup2\n        /* \"#utility.yul\":1471:1474   */\n      dup5\n        /* \"#utility.yul\":1467:1478   */\n      add\n        /* \"#utility.yul\":1460:1499   */\n      mstore\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1429:1430   */\n      dup2\n        /* \"#utility.yul\":1425:1435   */\n      add\n        /* \"#utility.yul\":1420:1435   */\n      swap1\n      pop\n        /* \"#utility.yul\":1396:1509   */\n      jump(tag_125)\n    tag_127:\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup5\n        /* \"#utility.yul\":1529:1532   */\n      dup5\n        /* \"#utility.yul\":1525:1541   */\n      add\n        /* \"#utility.yul\":1518:1545   */\n      mstore\n        /* \"#utility.yul\":1367:1551   */\n      pop\n        /* \"#utility.yul\":1305:1551   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1557:1659   */\n    tag_97:\n        /* \"#utility.yul\":1598:1604   */\n      0x00\n        /* \"#utility.yul\":1649:1651   */\n      0x1f\n        /* \"#utility.yul\":1645:1652   */\n      not\n        /* \"#utility.yul\":1640:1642   */\n      0x1f\n        /* \"#utility.yul\":1633:1638   */\n      dup4\n        /* \"#utility.yul\":1629:1643   */\n      add\n        /* \"#utility.yul\":1625:1653   */\n      and\n        /* \"#utility.yul\":1615:1653   */\n      swap1\n      pop\n        /* \"#utility.yul\":1557:1659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:2042   */\n    tag_98:\n        /* \"#utility.yul\":1753:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1820   */\n      tag_130\n        /* \"#utility.yul\":1814:1819   */\n      dup3\n        /* \"#utility.yul\":1781:1820   */\n      tag_94\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1836:1907   */\n      tag_131\n        /* \"#utility.yul\":1900:1906   */\n      dup2\n        /* \"#utility.yul\":1895:1898   */\n      dup6\n        /* \"#utility.yul\":1836:1907   */\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1829:1907   */\n      swap4\n      pop\n        /* \"#utility.yul\":1916:1981   */\n      tag_132\n        /* \"#utility.yul\":1974:1980   */\n      dup2\n        /* \"#utility.yul\":1969:1972   */\n      dup6\n        /* \"#utility.yul\":1962:1966   */\n      0x20\n        /* \"#utility.yul\":1955:1960   */\n      dup7\n        /* \"#utility.yul\":1951:1967   */\n      add\n        /* \"#utility.yul\":1916:1981   */\n      tag_96\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2006:2035   */\n      tag_133\n        /* \"#utility.yul\":2028:2034   */\n      dup2\n        /* \"#utility.yul\":2006:2035   */\n      tag_97\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2001:2004   */\n      dup5\n        /* \"#utility.yul\":1997:2036   */\n      add\n        /* \"#utility.yul\":1990:2036   */\n      swap2\n      pop\n        /* \"#utility.yul\":1757:2042   */\n      pop\n        /* \"#utility.yul\":1665:2042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2048:2361   */\n    tag_10:\n        /* \"#utility.yul\":2161:2165   */\n      0x00\n        /* \"#utility.yul\":2199:2201   */\n      0x20\n        /* \"#utility.yul\":2188:2197   */\n      dup3\n        /* \"#utility.yul\":2184:2202   */\n      add\n        /* \"#utility.yul\":2176:2202   */\n      swap1\n      pop\n        /* \"#utility.yul\":2248:2257   */\n      dup2\n        /* \"#utility.yul\":2242:2246   */\n      dup2\n        /* \"#utility.yul\":2238:2258   */\n      sub\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2223:2232   */\n      dup4\n        /* \"#utility.yul\":2219:2236   */\n      add\n        /* \"#utility.yul\":2212:2259   */\n      mstore\n        /* \"#utility.yul\":2276:2354   */\n      tag_135\n        /* \"#utility.yul\":2349:2353   */\n      dup2\n        /* \"#utility.yul\":2340:2346   */\n      dup5\n        /* \"#utility.yul\":2276:2354   */\n      tag_98\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2268:2354   */\n      swap1\n      pop\n        /* \"#utility.yul\":2048:2361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2485   */\n    tag_99:\n        /* \"#utility.yul\":2454:2478   */\n      tag_137\n        /* \"#utility.yul\":2472:2477   */\n      dup2\n        /* \"#utility.yul\":2454:2478   */\n      tag_91\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2449:2452   */\n      dup3\n        /* \"#utility.yul\":2442:2479   */\n      mstore\n        /* \"#utility.yul\":2367:2485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2491:2713   */\n    tag_15:\n        /* \"#utility.yul\":2584:2588   */\n      0x00\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2599:2625   */\n      swap1\n      pop\n        /* \"#utility.yul\":2635:2706   */\n      tag_139\n        /* \"#utility.yul\":2703:2704   */\n      0x00\n        /* \"#utility.yul\":2692:2701   */\n      dup4\n        /* \"#utility.yul\":2688:2705   */\n      add\n        /* \"#utility.yul\":2679:2685   */\n      dup5\n        /* \"#utility.yul\":2635:2706   */\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2491:2713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2899   */\n    tag_66:\n        /* \"#utility.yul\":2767:2844   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2764:2765   */\n      0x00\n        /* \"#utility.yul\":2757:2845   */\n      mstore\n        /* \"#utility.yul\":2864:2868   */\n      0x12\n        /* \"#utility.yul\":2861:2862   */\n      0x04\n        /* \"#utility.yul\":2854:2869   */\n      mstore\n        /* \"#utility.yul\":2888:2892   */\n      0x24\n        /* \"#utility.yul\":2885:2886   */\n      0x00\n        /* \"#utility.yul\":2878:2893   */\n      revert\n        /* \"#utility.yul\":2905:3085   */\n    tag_100:\n        /* \"#utility.yul\":2953:3030   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2943:3031   */\n      mstore\n        /* \"#utility.yul\":3050:3054   */\n      0x11\n        /* \"#utility.yul\":3047:3048   */\n      0x04\n        /* \"#utility.yul\":3040:3055   */\n      mstore\n        /* \"#utility.yul\":3074:3078   */\n      0x24\n        /* \"#utility.yul\":3071:3072   */\n      0x00\n        /* \"#utility.yul\":3064:3079   */\n      revert\n        /* \"#utility.yul\":3091:3276   */\n    tag_19:\n        /* \"#utility.yul\":3131:3132   */\n      0x00\n        /* \"#utility.yul\":3148:3168   */\n      tag_143\n        /* \"#utility.yul\":3166:3167   */\n      dup3\n        /* \"#utility.yul\":3148:3168   */\n      tag_91\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3143:3168   */\n      swap2\n      pop\n        /* \"#utility.yul\":3182:3202   */\n      tag_144\n        /* \"#utility.yul\":3200:3201   */\n      dup4\n        /* \"#utility.yul\":3182:3202   */\n      tag_91\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3177:3202   */\n      swap3\n      pop\n        /* \"#utility.yul\":3221:3222   */\n      dup3\n        /* \"#utility.yul\":3211:3246   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3226:3244   */\n      tag_146\n      tag_66\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3211:3246   */\n    tag_145:\n        /* \"#utility.yul\":3268:3269   */\n      dup3\n        /* \"#utility.yul\":3265:3266   */\n      dup3\n        /* \"#utility.yul\":3261:3270   */\n      div\n        /* \"#utility.yul\":3256:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3091:3276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3462   */\n    tag_24:\n        /* \"#utility.yul\":3330:3407   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3320:3408   */\n      mstore\n        /* \"#utility.yul\":3427:3431   */\n      0x41\n        /* \"#utility.yul\":3424:3425   */\n      0x04\n        /* \"#utility.yul\":3417:3432   */\n      mstore\n        /* \"#utility.yul\":3451:3455   */\n      0x24\n        /* \"#utility.yul\":3448:3449   */\n      0x00\n        /* \"#utility.yul\":3441:3456   */\n      revert\n        /* \"#utility.yul\":3468:3662   */\n    tag_31:\n        /* \"#utility.yul\":3508:3512   */\n      0x00\n        /* \"#utility.yul\":3528:3548   */\n      tag_149\n        /* \"#utility.yul\":3546:3547   */\n      dup3\n        /* \"#utility.yul\":3528:3548   */\n      tag_91\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3523:3548   */\n      swap2\n      pop\n        /* \"#utility.yul\":3562:3582   */\n      tag_150\n        /* \"#utility.yul\":3580:3581   */\n      dup4\n        /* \"#utility.yul\":3562:3582   */\n      tag_91\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3557:3582   */\n      swap3\n      pop\n        /* \"#utility.yul\":3606:3607   */\n      dup3\n        /* \"#utility.yul\":3603:3604   */\n      dup3\n        /* \"#utility.yul\":3599:3608   */\n      sub\n        /* \"#utility.yul\":3591:3608   */\n      swap1\n      pop\n        /* \"#utility.yul\":3630:3631   */\n      dup2\n        /* \"#utility.yul\":3624:3628   */\n      dup2\n        /* \"#utility.yul\":3621:3632   */\n      gt\n        /* \"#utility.yul\":3618:3655   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3635:3653   */\n      tag_152\n      tag_100\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3618:3655   */\n    tag_151:\n        /* \"#utility.yul\":3468:3662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3848   */\n    tag_37:\n        /* \"#utility.yul\":3716:3793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3713:3714   */\n      0x00\n        /* \"#utility.yul\":3706:3794   */\n      mstore\n        /* \"#utility.yul\":3813:3817   */\n      0x32\n        /* \"#utility.yul\":3810:3811   */\n      0x04\n        /* \"#utility.yul\":3803:3818   */\n      mstore\n        /* \"#utility.yul\":3837:3841   */\n      0x24\n        /* \"#utility.yul\":3834:3835   */\n      0x00\n        /* \"#utility.yul\":3827:3842   */\n      revert\n        /* \"#utility.yul\":3854:4087   */\n    tag_44:\n        /* \"#utility.yul\":3893:3896   */\n      0x00\n        /* \"#utility.yul\":3916:3940   */\n      tag_155\n        /* \"#utility.yul\":3934:3939   */\n      dup3\n        /* \"#utility.yul\":3916:3940   */\n      tag_91\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3907:3940   */\n      swap2\n      pop\n        /* \"#utility.yul\":3962:4028   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3955:3960   */\n      dup3\n        /* \"#utility.yul\":3952:4029   */\n      sub\n        /* \"#utility.yul\":3949:4052   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4032:4050   */\n      tag_157\n      tag_100\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3949:4052   */\n    tag_156:\n        /* \"#utility.yul\":4079:4080   */\n      0x01\n        /* \"#utility.yul\":4072:4077   */\n      dup3\n        /* \"#utility.yul\":4068:4081   */\n      add\n        /* \"#utility.yul\":4061:4081   */\n      swap1\n      pop\n        /* \"#utility.yul\":3854:4087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4264   */\n    tag_46:\n        /* \"#utility.yul\":4132:4135   */\n      0x00\n        /* \"#utility.yul\":4155:4179   */\n      tag_159\n        /* \"#utility.yul\":4173:4178   */\n      dup3\n        /* \"#utility.yul\":4155:4179   */\n      tag_91\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4146:4179   */\n      swap2\n      pop\n        /* \"#utility.yul\":4201:4205   */\n      0x00\n        /* \"#utility.yul\":4194:4199   */\n      dup3\n        /* \"#utility.yul\":4191:4206   */\n      sub\n        /* \"#utility.yul\":4188:4229   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4209:4227   */\n      tag_161\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4188:4229   */\n    tag_160:\n        /* \"#utility.yul\":4256:4257   */\n      0x01\n        /* \"#utility.yul\":4249:4254   */\n      dup3\n        /* \"#utility.yul\":4245:4258   */\n      sub\n        /* \"#utility.yul\":4238:4258   */\n      swap1\n      pop\n        /* \"#utility.yul\":4093:4264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4270:4418   */\n    tag_101:\n        /* \"#utility.yul\":4372:4383   */\n      0x00\n        /* \"#utility.yul\":4409:4412   */\n      dup2\n        /* \"#utility.yul\":4394:4412   */\n      swap1\n      pop\n        /* \"#utility.yul\":4270:4418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4424:4814   */\n    tag_102:\n        /* \"#utility.yul\":4530:4533   */\n      0x00\n        /* \"#utility.yul\":4558:4597   */\n      tag_164\n        /* \"#utility.yul\":4591:4596   */\n      dup3\n        /* \"#utility.yul\":4558:4597   */\n      tag_94\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4613:4702   */\n      tag_165\n        /* \"#utility.yul\":4695:4701   */\n      dup2\n        /* \"#utility.yul\":4690:4693   */\n      dup6\n        /* \"#utility.yul\":4613:4702   */\n      tag_101\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4606:4702   */\n      swap4\n      pop\n        /* \"#utility.yul\":4711:4776   */\n      tag_166\n        /* \"#utility.yul\":4769:4775   */\n      dup2\n        /* \"#utility.yul\":4764:4767   */\n      dup6\n        /* \"#utility.yul\":4757:4761   */\n      0x20\n        /* \"#utility.yul\":4750:4755   */\n      dup7\n        /* \"#utility.yul\":4746:4762   */\n      add\n        /* \"#utility.yul\":4711:4776   */\n      tag_96\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4801:4807   */\n      dup1\n        /* \"#utility.yul\":4796:4799   */\n      dup5\n        /* \"#utility.yul\":4792:4808   */\n      add\n        /* \"#utility.yul\":4785:4808   */\n      swap2\n      pop\n        /* \"#utility.yul\":4534:4814   */\n      pop\n        /* \"#utility.yul\":4424:4814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4820:4971   */\n    tag_103:\n        /* \"#utility.yul\":4960:4963   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4956:4957   */\n      0x00\n        /* \"#utility.yul\":4948:4954   */\n      dup3\n        /* \"#utility.yul\":4944:4958   */\n      add\n        /* \"#utility.yul\":4937:4964   */\n      mstore\n        /* \"#utility.yul\":4820:4971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5377   */\n    tag_104:\n        /* \"#utility.yul\":5137:5140   */\n      0x00\n        /* \"#utility.yul\":5158:5242   */\n      tag_169\n        /* \"#utility.yul\":5240:5241   */\n      0x01\n        /* \"#utility.yul\":5235:5238   */\n      dup4\n        /* \"#utility.yul\":5158:5242   */\n      tag_101\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5151:5242   */\n      swap2\n      pop\n        /* \"#utility.yul\":5251:5344   */\n      tag_170\n        /* \"#utility.yul\":5340:5343   */\n      dup3\n        /* \"#utility.yul\":5251:5344   */\n      tag_103\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5369:5370   */\n      0x01\n        /* \"#utility.yul\":5364:5367   */\n      dup3\n        /* \"#utility.yul\":5360:5371   */\n      add\n        /* \"#utility.yul\":5353:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":4977:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5924   */\n    tag_48:\n        /* \"#utility.yul\":5616:5619   */\n      0x00\n        /* \"#utility.yul\":5638:5733   */\n      tag_172\n        /* \"#utility.yul\":5729:5732   */\n      dup3\n        /* \"#utility.yul\":5720:5726   */\n      dup5\n        /* \"#utility.yul\":5638:5733   */\n      tag_102\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5631:5733   */\n      swap2\n      pop\n        /* \"#utility.yul\":5750:5898   */\n      tag_173\n        /* \"#utility.yul\":5894:5897   */\n      dup3\n        /* \"#utility.yul\":5750:5898   */\n      tag_104\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5743:5898   */\n      swap2\n      pop\n        /* \"#utility.yul\":5915:5918   */\n      dup2\n        /* \"#utility.yul\":5908:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5383:5924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5930:6028   */\n    tag_105:\n        /* \"#utility.yul\":5981:5987   */\n      0x00\n        /* \"#utility.yul\":6015:6020   */\n      dup2\n        /* \"#utility.yul\":6009:6021   */\n      mload\n        /* \"#utility.yul\":5999:6021   */\n      swap1\n      pop\n        /* \"#utility.yul\":5930:6028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6034:6181   */\n    tag_106:\n        /* \"#utility.yul\":6135:6146   */\n      0x00\n        /* \"#utility.yul\":6172:6175   */\n      dup2\n        /* \"#utility.yul\":6157:6175   */\n      swap1\n      pop\n        /* \"#utility.yul\":6034:6181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6187:6573   */\n    tag_107:\n        /* \"#utility.yul\":6291:6294   */\n      0x00\n        /* \"#utility.yul\":6319:6357   */\n      tag_177\n        /* \"#utility.yul\":6351:6356   */\n      dup3\n        /* \"#utility.yul\":6319:6357   */\n      tag_105\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6373:6461   */\n      tag_178\n        /* \"#utility.yul\":6454:6460   */\n      dup2\n        /* \"#utility.yul\":6449:6452   */\n      dup6\n        /* \"#utility.yul\":6373:6461   */\n      tag_106\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6366:6461   */\n      swap4\n      pop\n        /* \"#utility.yul\":6470:6535   */\n      tag_179\n        /* \"#utility.yul\":6528:6534   */\n      dup2\n        /* \"#utility.yul\":6523:6526   */\n      dup6\n        /* \"#utility.yul\":6516:6520   */\n      0x20\n        /* \"#utility.yul\":6509:6514   */\n      dup7\n        /* \"#utility.yul\":6505:6521   */\n      add\n        /* \"#utility.yul\":6470:6535   */\n      tag_96\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6560:6566   */\n      dup1\n        /* \"#utility.yul\":6555:6558   */\n      dup5\n        /* \"#utility.yul\":6551:6567   */\n      add\n        /* \"#utility.yul\":6544:6567   */\n      swap2\n      pop\n        /* \"#utility.yul\":6295:6573   */\n      pop\n        /* \"#utility.yul\":6187:6573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6579:7006   */\n    tag_50:\n        /* \"#utility.yul\":6755:6758   */\n      0x00\n        /* \"#utility.yul\":6777:6870   */\n      tag_181\n        /* \"#utility.yul\":6866:6869   */\n      dup3\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6777:6870   */\n      tag_107\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6770:6870   */\n      swap2\n      pop\n        /* \"#utility.yul\":6887:6980   */\n      tag_182\n        /* \"#utility.yul\":6976:6979   */\n      dup3\n        /* \"#utility.yul\":6967:6973   */\n      dup5\n        /* \"#utility.yul\":6887:6980   */\n      tag_107\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6880:6980   */\n      swap2\n      pop\n        /* \"#utility.yul\":6997:7000   */\n      dup2\n        /* \"#utility.yul\":6990:7000   */\n      swap1\n      pop\n        /* \"#utility.yul\":6579:7006   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f55cdfd271494b1a2d7fdcd07fe5c437879c61fa6caa4340d4fcbae3f136190d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506109048061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063212e31d614610038578063661a03da14610068575b5f80fd5b610052600480360381019061004d9190610540565b610098565b60405161005f91906105f5565b60405180910390f35b610082600480360381019061007d9190610540565b6102b9565b60405161008f9190610624565b60405180910390f35b60605f601290505f836040516020016100b19190610624565b60405160208183030381529060405290505f670de0b6b3a7640000856100d79190610697565b90505f6100e3826102ee565b90505f8467ffffffffffffffff811115610100576100ff6106c7565b5b6040519080825280601f01601f1916602001820160405280156101325781602001600182028036833780820191505090505b5090505f61013f886102b9565b90505f600190505f60018861015491906106f4565b90505b5f811115610269575f828461016c91906106f4565b106101e5575f87838561017f91906106f4565b815181106101905761018f610727565b5b602001015160f81c60f81b9050808583815181106101b1576101b0610727565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a90535050610248565b7f300000000000000000000000000000000000000000000000000000000000000084828151811061021957610218610727565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505b818061025390610754565b92505080806102619061079b565b915050610157565b508360405160200161027b9190610846565b6040516020818303038152906040528360405160200161029c9291906108ab565b604051602081830303815290604052975050505050505050919050565b5f805b5f83146102e55780806102ce90610754565b915050600a836102de9190610697565b92506102bc565b80915050919050565b60605f60016102fc846103b8565b0190505f8167ffffffffffffffff81111561031a576103196106c7565b5b6040519080825280601f01601f19166020018201604052801561034c5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156103ad578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816103a2576103a161063d565b5b0494505f8503610359575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610414577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161040a5761040961063d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610451576d04ee2d6d415b85acef810000000083816104475761044661063d565b5b0492506020810190505b662386f26fc10000831061048057662386f26fc1000083816104765761047561063d565b5b0492506010810190505b6305f5e10083106104a9576305f5e100838161049f5761049e61063d565b5b0492506008810190505b61271083106104ce5761271083816104c4576104c361063d565b5b0492506004810190505b606483106104f157606483816104e7576104e661063d565b5b0492506002810190505b600a8310610500576001810190505b80915050919050565b5f80fd5b5f819050919050565b61051f8161050d565b8114610529575f80fd5b50565b5f8135905061053a81610516565b92915050565b5f6020828403121561055557610554610509565b5b5f6105628482850161052c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156105a2578082015181840152602081019050610587565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6105c78261056b565b6105d18185610575565b93506105e1818560208601610585565b6105ea816105ad565b840191505092915050565b5f6020820190508181035f83015261060d81846105bd565b905092915050565b61061e8161050d565b82525050565b5f6020820190506106375f830184610615565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106a18261050d565b91506106ac8361050d565b9250826106bc576106bb61063d565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6106fe8261050d565b91506107098361050d565b92508282039050818111156107215761072061066a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61075e8261050d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107905761078f61066a565b5b600182019050919050565b5f6107a58261050d565b91505f82036107b7576107b661066a565b5b600182039050919050565b5f81905092915050565b5f6107d68261056b565b6107e081856107c2565b93506107f0818560208601610585565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6108306001836107c2565b915061083b826107fc565b600182019050919050565b5f61085182846107cc565b915061085c82610824565b915081905092915050565b5f81519050919050565b5f81905092915050565b5f61088582610867565b61088f8185610871565b935061089f818560208601610585565b80840191505092915050565b5f6108b6828561087b565b91506108c2828461087b565b9150819050939250505056fea2646970667358221220f55cdfd271494b1a2d7fdcd07fe5c437879c61fa6caa4340d4fcbae3f136190d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x904 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x212E31D6 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x661A03DA EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x12 SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3 DUP3 PUSH2 0x2EE JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x13F DUP9 PUSH2 0x2B9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 PUSH1 0x1 DUP9 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x269 JUMPI PUSH0 DUP3 DUP5 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST LT PUSH2 0x1E5 JUMPI PUSH0 DUP8 DUP4 DUP6 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x190 JUMPI PUSH2 0x18F PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP POP PUSH2 0x248 JUMP JUMPDEST PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP2 DUP1 PUSH2 0x253 SWAP1 PUSH2 0x754 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x261 SWAP1 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157 JUMP JUMPDEST POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29C SWAP3 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 DUP4 EQ PUSH2 0x2E5 JUMPI DUP1 DUP1 PUSH2 0x2CE SWAP1 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2FC DUP5 PUSH2 0x3B8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x359 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x414 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x451 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x480 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x476 JUMPI PUSH2 0x475 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4A9 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4CE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4C4 JUMPI PUSH2 0x4C3 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4F1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4E7 JUMPI PUSH2 0x4E6 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x500 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x50D JUMP JUMPDEST DUP2 EQ PUSH2 0x529 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53A DUP2 PUSH2 0x516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x509 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x562 DUP5 DUP3 DUP6 ADD PUSH2 0x52C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x587 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5C7 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x5D1 DUP2 DUP6 PUSH2 0x575 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST PUSH2 0x5EA DUP2 PUSH2 0x5AD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60D DUP2 DUP5 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x50D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6A1 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6BC JUMPI PUSH2 0x6BB PUSH2 0x63D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6FE DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x709 DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x721 JUMPI PUSH2 0x720 PUSH2 0x66A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x75E DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x790 JUMPI PUSH2 0x78F PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D6 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x7E0 DUP2 DUP6 PUSH2 0x7C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x7F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x830 PUSH1 0x1 DUP4 PUSH2 0x7C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x83B DUP3 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x851 DUP3 DUP5 PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP PUSH2 0x85C DUP3 PUSH2 0x824 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x885 DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x88F DUP2 DUP6 PUSH2 0x871 JUMP JUMPDEST SWAP4 POP PUSH2 0x89F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B6 DUP3 DUP6 PUSH2 0x87B JUMP JUMPDEST SWAP2 POP PUSH2 0x8C2 DUP3 DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5C 0xDF 0xD2 PUSH18 0x494B1A2D7FDCD07FE5C437879C61FA6CAA43 BLOCKHASH 0xD4 0xFC 0xBA 0xE3 CALL CALLDATASIZE NOT 0xD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "253:1261:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@convertToSmallerUnit_2313": {
									"entryPoint": 152,
									"id": 2313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUintLength_2338": {
									"entryPoint": 697,
									"id": 2338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1914": {
									"entryPoint": 952,
									"id": 1914,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_853": {
									"entryPoint": 750,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7009:10",
										"nodeType": "YulBlock",
										"src": "0:7009:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "756:263:10",
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:10",
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nativeSrc": "804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nativeSrc": "804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nativeSrc": "769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nativeSrc": "766:119:10",
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nativeSrc": "895:117:10",
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nativeSrc": "910:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:10",
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nativeSrc": "970:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nativeSrc": "949:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:10",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:10",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:10",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nativeSrc": "1084:40:10",
													"nodeType": "YulBlock",
													"src": "1084:40:10",
													"statements": [
														{
															"nativeSrc": "1095:22:10",
															"nodeType": "YulAssignment",
															"src": "1095:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1111:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1105:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:10"
																},
																"nativeSrc": "1105:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1105:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1025:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:10",
														"nodeType": "YulTypedName",
														"src": "1067:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1077:6:10",
														"nodeType": "YulTypedName",
														"src": "1077:6:10",
														"type": ""
													}
												],
												"src": "1025:99:10"
											},
											{
												"body": {
													"nativeSrc": "1226:73:10",
													"nodeType": "YulBlock",
													"src": "1226:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1243:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1248:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1236:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:10"
																},
																"nativeSrc": "1236:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1236:19:10"
															},
															"nativeSrc": "1236:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1236:19:10"
														},
														{
															"nativeSrc": "1264:29:10",
															"nodeType": "YulAssignment",
															"src": "1264:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1283:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:10"
																},
																"nativeSrc": "1279:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1279:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1264:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1264:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1130:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1198:3:10",
														"nodeType": "YulTypedName",
														"src": "1198:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1203:6:10",
														"nodeType": "YulTypedName",
														"src": "1203:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1214:11:10",
														"nodeType": "YulTypedName",
														"src": "1214:11:10",
														"type": ""
													}
												],
												"src": "1130:169:10"
											},
											{
												"body": {
													"nativeSrc": "1367:184:10",
													"nodeType": "YulBlock",
													"src": "1367:184:10",
													"statements": [
														{
															"nativeSrc": "1377:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1377:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1386:1:10",
																"nodeType": "YulLiteral",
																"src": "1386:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1381:1:10",
																	"nodeType": "YulTypedName",
																	"src": "1381:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1446:63:10",
																"nodeType": "YulBlock",
																"src": "1446:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1471:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1471:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1476:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1476:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1467:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1467:3:10"
																					},
																					"nativeSrc": "1467:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1467:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1490:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1490:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1495:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1495:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1486:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1486:3:10"
																							},
																							"nativeSrc": "1486:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1486:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1480:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1480:5:10"
																					},
																					"nativeSrc": "1480:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1480:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1460:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:10"
																			},
																			"nativeSrc": "1460:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1460:39:10"
																		},
																		"nativeSrc": "1460:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1460:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1407:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1407:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1410:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1410:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1404:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1404:2:10"
																},
																"nativeSrc": "1404:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1404:13:10"
															},
															"nativeSrc": "1396:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1418:19:10",
																"nodeType": "YulBlock",
																"src": "1418:19:10",
																"statements": [
																	{
																		"nativeSrc": "1420:15:10",
																		"nodeType": "YulAssignment",
																		"src": "1420:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1429:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1429:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1432:2:10",
																					"nodeType": "YulLiteral",
																					"src": "1432:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1425:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1425:3:10"
																			},
																			"nativeSrc": "1425:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1425:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1420:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1420:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1400:3:10",
																"nodeType": "YulBlock",
																"src": "1400:3:10",
																"statements": []
															},
															"src": "1396:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1529:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1534:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:10"
																		},
																		"nativeSrc": "1525:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1543:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1518:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:10"
																},
																"nativeSrc": "1518:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1518:27:10"
															},
															"nativeSrc": "1518:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1518:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1305:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1349:3:10",
														"nodeType": "YulTypedName",
														"src": "1349:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1354:3:10",
														"nodeType": "YulTypedName",
														"src": "1354:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1359:6:10",
														"nodeType": "YulTypedName",
														"src": "1359:6:10",
														"type": ""
													}
												],
												"src": "1305:246:10"
											},
											{
												"body": {
													"nativeSrc": "1605:54:10",
													"nodeType": "YulBlock",
													"src": "1605:54:10",
													"statements": [
														{
															"nativeSrc": "1615:38:10",
															"nodeType": "YulAssignment",
															"src": "1615:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1633:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1633:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1640:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1640:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1629:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:10"
																		},
																		"nativeSrc": "1629:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1629:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1649:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1645:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:10"
																		},
																		"nativeSrc": "1645:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1645:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1625:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:10"
																},
																"nativeSrc": "1625:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1625:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1557:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1588:5:10",
														"nodeType": "YulTypedName",
														"src": "1588:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1598:6:10",
														"nodeType": "YulTypedName",
														"src": "1598:6:10",
														"type": ""
													}
												],
												"src": "1557:102:10"
											},
											{
												"body": {
													"nativeSrc": "1757:285:10",
													"nodeType": "YulBlock",
													"src": "1757:285:10",
													"statements": [
														{
															"nativeSrc": "1767:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1767:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1814:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1814:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1781:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1781:32:10"
																},
																"nativeSrc": "1781:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1781:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1771:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1771:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1829:78:10",
															"nodeType": "YulAssignment",
															"src": "1829:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1895:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1900:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1836:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1836:58:10"
																},
																"nativeSrc": "1836:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1836:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1955:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1955:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1962:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1962:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1951:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:10"
																		},
																		"nativeSrc": "1951:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1969:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1974:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1974:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1916:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1916:34:10"
																},
																"nativeSrc": "1916:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1916:65:10"
															},
															"nativeSrc": "1916:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1916:65:10"
														},
														{
															"nativeSrc": "1990:46:10",
															"nodeType": "YulAssignment",
															"src": "1990:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2001:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2028:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2006:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "2006:21:10"
																		},
																		"nativeSrc": "2006:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2006:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:10"
																},
																"nativeSrc": "1997:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1997:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1665:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1738:5:10",
														"nodeType": "YulTypedName",
														"src": "1738:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1745:3:10",
														"nodeType": "YulTypedName",
														"src": "1745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1753:3:10",
														"nodeType": "YulTypedName",
														"src": "1753:3:10",
														"type": ""
													}
												],
												"src": "1665:377:10"
											},
											{
												"body": {
													"nativeSrc": "2166:195:10",
													"nodeType": "YulBlock",
													"src": "2166:195:10",
													"statements": [
														{
															"nativeSrc": "2176:26:10",
															"nodeType": "YulAssignment",
															"src": "2176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2188:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2188:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:10"
																},
																"nativeSrc": "2184:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2176:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2176:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2223:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2234:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2234:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:10"
																		},
																		"nativeSrc": "2219:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2219:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2242:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2242:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2248:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2238:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:10"
																		},
																		"nativeSrc": "2238:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2238:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:10"
																},
																"nativeSrc": "2212:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2212:47:10"
															},
															"nativeSrc": "2212:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2212:47:10"
														},
														{
															"nativeSrc": "2268:86:10",
															"nodeType": "YulAssignment",
															"src": "2268:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2340:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2340:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2349:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2349:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2276:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "2276:63:10"
																},
																"nativeSrc": "2276:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2276:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2268:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2048:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2138:9:10",
														"nodeType": "YulTypedName",
														"src": "2138:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2150:6:10",
														"nodeType": "YulTypedName",
														"src": "2150:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2161:4:10",
														"nodeType": "YulTypedName",
														"src": "2161:4:10",
														"type": ""
													}
												],
												"src": "2048:313:10"
											},
											{
												"body": {
													"nativeSrc": "2432:53:10",
													"nodeType": "YulBlock",
													"src": "2432:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2449:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2472:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2472:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2454:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2454:17:10"
																		},
																		"nativeSrc": "2454:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2454:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:10"
																},
																"nativeSrc": "2442:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2442:37:10"
															},
															"nativeSrc": "2442:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2442:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2367:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2420:5:10",
														"nodeType": "YulTypedName",
														"src": "2420:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2427:3:10",
														"nodeType": "YulTypedName",
														"src": "2427:3:10",
														"type": ""
													}
												],
												"src": "2367:118:10"
											},
											{
												"body": {
													"nativeSrc": "2589:124:10",
													"nodeType": "YulBlock",
													"src": "2589:124:10",
													"statements": [
														{
															"nativeSrc": "2599:26:10",
															"nodeType": "YulAssignment",
															"src": "2599:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2611:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2611:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:10"
																},
																"nativeSrc": "2607:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2607:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2599:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2599:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2679:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2679:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2692:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2703:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2703:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2688:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:10"
																		},
																		"nativeSrc": "2688:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2635:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:43:10"
																},
																"nativeSrc": "2635:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:71:10"
															},
															"nativeSrc": "2635:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2635:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2491:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2561:9:10",
														"nodeType": "YulTypedName",
														"src": "2561:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2573:6:10",
														"nodeType": "YulTypedName",
														"src": "2573:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2584:4:10",
														"nodeType": "YulTypedName",
														"src": "2584:4:10",
														"type": ""
													}
												],
												"src": "2491:222:10"
											},
											{
												"body": {
													"nativeSrc": "2747:152:10",
													"nodeType": "YulBlock",
													"src": "2747:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2764:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2764:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2767:77:10",
																		"nodeType": "YulLiteral",
																		"src": "2767:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2757:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:10"
																},
																"nativeSrc": "2757:88:10",
																"nodeType": "YulFunctionCall",
																"src": "2757:88:10"
															},
															"nativeSrc": "2757:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "2757:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2861:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2861:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2864:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2864:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2854:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2854:6:10"
																},
																"nativeSrc": "2854:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2854:15:10"
															},
															"nativeSrc": "2854:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2854:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2885:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2885:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2888:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2878:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:10"
																},
																"nativeSrc": "2878:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2878:15:10"
															},
															"nativeSrc": "2878:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2878:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2719:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2719:180:10"
											},
											{
												"body": {
													"nativeSrc": "2933:152:10",
													"nodeType": "YulBlock",
													"src": "2933:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2950:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2953:77:10",
																		"nodeType": "YulLiteral",
																		"src": "2953:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:10"
																},
																"nativeSrc": "2943:88:10",
																"nodeType": "YulFunctionCall",
																"src": "2943:88:10"
															},
															"nativeSrc": "2943:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "2943:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3047:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3050:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3040:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:10"
																},
																"nativeSrc": "3040:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3040:15:10"
															},
															"nativeSrc": "3040:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3040:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3071:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3071:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3074:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3064:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:10"
																},
																"nativeSrc": "3064:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3064:15:10"
															},
															"nativeSrc": "3064:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3064:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2905:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2905:180:10"
											},
											{
												"body": {
													"nativeSrc": "3133:143:10",
													"nodeType": "YulBlock",
													"src": "3133:143:10",
													"statements": [
														{
															"nativeSrc": "3143:25:10",
															"nodeType": "YulAssignment",
															"src": "3143:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3166:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3166:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3148:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3148:17:10"
																},
																"nativeSrc": "3148:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3148:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3143:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3143:1:10"
																}
															]
														},
														{
															"nativeSrc": "3177:25:10",
															"nodeType": "YulAssignment",
															"src": "3177:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3200:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3200:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3182:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3182:17:10"
																},
																"nativeSrc": "3182:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3182:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3177:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3177:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3224:22:10",
																"nodeType": "YulBlock",
																"src": "3224:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3226:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3226:16:10"
																			},
																			"nativeSrc": "3226:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3226:18:10"
																		},
																		"nativeSrc": "3226:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3221:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3221:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3214:6:10"
																},
																"nativeSrc": "3214:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3214:9:10"
															},
															"nativeSrc": "3211:35:10",
															"nodeType": "YulIf",
															"src": "3211:35:10"
														},
														{
															"nativeSrc": "3256:14:10",
															"nodeType": "YulAssignment",
															"src": "3256:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3265:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3265:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3268:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3268:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:10"
																},
																"nativeSrc": "3261:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3256:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3256:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3091:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3122:1:10",
														"nodeType": "YulTypedName",
														"src": "3122:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3125:1:10",
														"nodeType": "YulTypedName",
														"src": "3125:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3131:1:10",
														"nodeType": "YulTypedName",
														"src": "3131:1:10",
														"type": ""
													}
												],
												"src": "3091:185:10"
											},
											{
												"body": {
													"nativeSrc": "3310:152:10",
													"nodeType": "YulBlock",
													"src": "3310:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3327:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3327:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3330:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3330:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3320:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:10"
																},
																"nativeSrc": "3320:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3320:88:10"
															},
															"nativeSrc": "3320:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3320:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3424:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3424:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3427:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3417:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:10"
																},
																"nativeSrc": "3417:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3417:15:10"
															},
															"nativeSrc": "3417:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3417:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3448:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3451:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3451:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3441:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:10"
																},
																"nativeSrc": "3441:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3441:15:10"
															},
															"nativeSrc": "3441:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3441:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3282:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3282:180:10"
											},
											{
												"body": {
													"nativeSrc": "3513:149:10",
													"nodeType": "YulBlock",
													"src": "3513:149:10",
													"statements": [
														{
															"nativeSrc": "3523:25:10",
															"nodeType": "YulAssignment",
															"src": "3523:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3546:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3546:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3528:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3528:17:10"
																},
																"nativeSrc": "3528:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3528:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3523:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3523:1:10"
																}
															]
														},
														{
															"nativeSrc": "3557:25:10",
															"nodeType": "YulAssignment",
															"src": "3557:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3580:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3580:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3562:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3562:17:10"
																},
																"nativeSrc": "3562:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3562:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3557:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3557:1:10"
																}
															]
														},
														{
															"nativeSrc": "3591:17:10",
															"nodeType": "YulAssignment",
															"src": "3591:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3603:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3603:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3606:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3606:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:10"
																},
																"nativeSrc": "3599:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3599:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3591:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3591:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3633:22:10",
																"nodeType": "YulBlock",
																"src": "3633:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3635:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3635:16:10"
																			},
																			"nativeSrc": "3635:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3635:18:10"
																		},
																		"nativeSrc": "3635:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3635:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3624:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3624:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3630:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3630:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3621:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3621:2:10"
																},
																"nativeSrc": "3621:11:10",
																"nodeType": "YulFunctionCall",
																"src": "3621:11:10"
															},
															"nativeSrc": "3618:37:10",
															"nodeType": "YulIf",
															"src": "3618:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3468:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3499:1:10",
														"nodeType": "YulTypedName",
														"src": "3499:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3502:1:10",
														"nodeType": "YulTypedName",
														"src": "3502:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3508:4:10",
														"nodeType": "YulTypedName",
														"src": "3508:4:10",
														"type": ""
													}
												],
												"src": "3468:194:10"
											},
											{
												"body": {
													"nativeSrc": "3696:152:10",
													"nodeType": "YulBlock",
													"src": "3696:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3716:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3716:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3706:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:10"
																},
																"nativeSrc": "3706:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3706:88:10"
															},
															"nativeSrc": "3706:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3706:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3810:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3810:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3813:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3813:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3803:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:10"
																},
																"nativeSrc": "3803:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3803:15:10"
															},
															"nativeSrc": "3803:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3803:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3834:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3834:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3837:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3837:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:10"
																},
																"nativeSrc": "3827:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3827:15:10"
															},
															"nativeSrc": "3827:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3827:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3668:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3668:180:10"
											},
											{
												"body": {
													"nativeSrc": "3897:190:10",
													"nodeType": "YulBlock",
													"src": "3897:190:10",
													"statements": [
														{
															"nativeSrc": "3907:33:10",
															"nodeType": "YulAssignment",
															"src": "3907:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3934:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3934:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3916:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3916:17:10"
																},
																"nativeSrc": "3916:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3916:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3907:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3907:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4030:22:10",
																"nodeType": "YulBlock",
																"src": "4030:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4032:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4032:16:10"
																			},
																			"nativeSrc": "4032:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4032:18:10"
																		},
																		"nativeSrc": "4032:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4032:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3955:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3962:66:10",
																		"nodeType": "YulLiteral",
																		"src": "3962:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3952:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3952:2:10"
																},
																"nativeSrc": "3952:77:10",
																"nodeType": "YulFunctionCall",
																"src": "3952:77:10"
															},
															"nativeSrc": "3949:103:10",
															"nodeType": "YulIf",
															"src": "3949:103:10"
														},
														{
															"nativeSrc": "4061:20:10",
															"nodeType": "YulAssignment",
															"src": "4061:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4072:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4072:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4079:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4079:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4068:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4068:3:10"
																},
																"nativeSrc": "4068:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4068:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4061:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3854:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3883:5:10",
														"nodeType": "YulTypedName",
														"src": "3883:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3893:3:10",
														"nodeType": "YulTypedName",
														"src": "3893:3:10",
														"type": ""
													}
												],
												"src": "3854:233:10"
											},
											{
												"body": {
													"nativeSrc": "4136:128:10",
													"nodeType": "YulBlock",
													"src": "4136:128:10",
													"statements": [
														{
															"nativeSrc": "4146:33:10",
															"nodeType": "YulAssignment",
															"src": "4146:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4173:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4173:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4155:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4155:17:10"
																},
																"nativeSrc": "4155:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4155:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4146:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4146:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4207:22:10",
																"nodeType": "YulBlock",
																"src": "4207:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4209:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4209:16:10"
																			},
																			"nativeSrc": "4209:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4209:18:10"
																		},
																		"nativeSrc": "4209:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4209:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4194:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4194:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4201:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4201:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4191:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4191:2:10"
																},
																"nativeSrc": "4191:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4191:15:10"
															},
															"nativeSrc": "4188:41:10",
															"nodeType": "YulIf",
															"src": "4188:41:10"
														},
														{
															"nativeSrc": "4238:20:10",
															"nodeType": "YulAssignment",
															"src": "4238:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4249:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4256:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4256:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4245:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:10"
																},
																"nativeSrc": "4245:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4245:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4238:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4238:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "4093:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4122:5:10",
														"nodeType": "YulTypedName",
														"src": "4122:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4132:3:10",
														"nodeType": "YulTypedName",
														"src": "4132:3:10",
														"type": ""
													}
												],
												"src": "4093:171:10"
											},
											{
												"body": {
													"nativeSrc": "4384:34:10",
													"nodeType": "YulBlock",
													"src": "4384:34:10",
													"statements": [
														{
															"nativeSrc": "4394:18:10",
															"nodeType": "YulAssignment",
															"src": "4394:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "4409:3:10",
																"nodeType": "YulIdentifier",
																"src": "4409:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4394:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4394:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4270:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4356:3:10",
														"nodeType": "YulTypedName",
														"src": "4356:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4361:6:10",
														"nodeType": "YulTypedName",
														"src": "4361:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4372:11:10",
														"nodeType": "YulTypedName",
														"src": "4372:11:10",
														"type": ""
													}
												],
												"src": "4270:148:10"
											},
											{
												"body": {
													"nativeSrc": "4534:280:10",
													"nodeType": "YulBlock",
													"src": "4534:280:10",
													"statements": [
														{
															"nativeSrc": "4544:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4544:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4591:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4591:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4558:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4558:32:10"
																},
																"nativeSrc": "4558:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4558:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4548:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4548:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4606:96:10",
															"nodeType": "YulAssignment",
															"src": "4606:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4690:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4690:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4695:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4695:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4613:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "4613:76:10"
																},
																"nativeSrc": "4613:89:10",
																"nodeType": "YulFunctionCall",
																"src": "4613:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4606:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4750:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4750:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4757:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:10"
																		},
																		"nativeSrc": "4746:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4764:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4769:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4769:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4711:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "4711:34:10"
																},
																"nativeSrc": "4711:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4711:65:10"
															},
															"nativeSrc": "4711:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4711:65:10"
														},
														{
															"nativeSrc": "4785:23:10",
															"nodeType": "YulAssignment",
															"src": "4785:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4796:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4796:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4801:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4792:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4792:3:10"
																},
																"nativeSrc": "4792:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4792:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4424:390:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4515:5:10",
														"nodeType": "YulTypedName",
														"src": "4515:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4522:3:10",
														"nodeType": "YulTypedName",
														"src": "4522:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4530:3:10",
														"nodeType": "YulTypedName",
														"src": "4530:3:10",
														"type": ""
													}
												],
												"src": "4424:390:10"
											},
											{
												"body": {
													"nativeSrc": "4926:45:10",
													"nodeType": "YulBlock",
													"src": "4926:45:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4948:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4948:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4956:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4956:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4944:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:10"
																		},
																		"nativeSrc": "4944:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4944:14:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "4960:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4960:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4937:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:10"
																},
																"nativeSrc": "4937:27:10",
																"nodeType": "YulFunctionCall",
																"src": "4937:27:10"
															},
															"nativeSrc": "4937:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "4937:27:10"
														}
													]
												},
												"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
												"nativeSrc": "4820:151:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4918:6:10",
														"nodeType": "YulTypedName",
														"src": "4918:6:10",
														"type": ""
													}
												],
												"src": "4820:151:10"
											},
											{
												"body": {
													"nativeSrc": "5141:236:10",
													"nodeType": "YulBlock",
													"src": "5141:236:10",
													"statements": [
														{
															"nativeSrc": "5151:91:10",
															"nodeType": "YulAssignment",
															"src": "5151:91:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5235:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5235:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5240:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5240:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5158:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "5158:76:10"
																},
																"nativeSrc": "5158:84:10",
																"nodeType": "YulFunctionCall",
																"src": "5158:84:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5151:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5340:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5340:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																	"nativeSrc": "5251:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5251:88:10"
																},
																"nativeSrc": "5251:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5251:93:10"
															},
															"nativeSrc": "5251:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5251:93:10"
														},
														{
															"nativeSrc": "5353:18:10",
															"nodeType": "YulAssignment",
															"src": "5353:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5364:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5364:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5369:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5369:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5360:3:10"
																},
																"nativeSrc": "5360:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5360:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4977:400:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5129:3:10",
														"nodeType": "YulTypedName",
														"src": "5129:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5137:3:10",
														"nodeType": "YulTypedName",
														"src": "5137:3:10",
														"type": ""
													}
												],
												"src": "4977:400:10"
											},
											{
												"body": {
													"nativeSrc": "5620:304:10",
													"nodeType": "YulBlock",
													"src": "5620:304:10",
													"statements": [
														{
															"nativeSrc": "5631:102:10",
															"nodeType": "YulAssignment",
															"src": "5631:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5720:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5720:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5729:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5729:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5638:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "5638:81:10"
																},
																"nativeSrc": "5638:95:10",
																"nodeType": "YulFunctionCall",
																"src": "5638:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:10"
																}
															]
														},
														{
															"nativeSrc": "5743:155:10",
															"nodeType": "YulAssignment",
															"src": "5743:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5894:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5894:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5750:142:10",
																	"nodeType": "YulIdentifier",
																	"src": "5750:142:10"
																},
																"nativeSrc": "5750:148:10",
																"nodeType": "YulFunctionCall",
																"src": "5750:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5743:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:10"
																}
															]
														},
														{
															"nativeSrc": "5908:10:10",
															"nodeType": "YulAssignment",
															"src": "5908:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "5915:3:10",
																"nodeType": "YulIdentifier",
																"src": "5915:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5908:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5383:541:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5599:3:10",
														"nodeType": "YulTypedName",
														"src": "5599:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5605:6:10",
														"nodeType": "YulTypedName",
														"src": "5605:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5616:3:10",
														"nodeType": "YulTypedName",
														"src": "5616:3:10",
														"type": ""
													}
												],
												"src": "5383:541:10"
											},
											{
												"body": {
													"nativeSrc": "5988:40:10",
													"nodeType": "YulBlock",
													"src": "5988:40:10",
													"statements": [
														{
															"nativeSrc": "5999:22:10",
															"nodeType": "YulAssignment",
															"src": "5999:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6015:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6015:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6009:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6009:5:10"
																},
																"nativeSrc": "6009:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6009:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5999:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5930:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5971:5:10",
														"nodeType": "YulTypedName",
														"src": "5971:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5981:6:10",
														"nodeType": "YulTypedName",
														"src": "5981:6:10",
														"type": ""
													}
												],
												"src": "5930:98:10"
											},
											{
												"body": {
													"nativeSrc": "6147:34:10",
													"nodeType": "YulBlock",
													"src": "6147:34:10",
													"statements": [
														{
															"nativeSrc": "6157:18:10",
															"nodeType": "YulAssignment",
															"src": "6157:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6172:3:10",
																"nodeType": "YulIdentifier",
																"src": "6172:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6157:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "6157:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6034:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6119:3:10",
														"nodeType": "YulTypedName",
														"src": "6119:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6124:6:10",
														"nodeType": "YulTypedName",
														"src": "6124:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6135:11:10",
														"nodeType": "YulTypedName",
														"src": "6135:11:10",
														"type": ""
													}
												],
												"src": "6034:147:10"
											},
											{
												"body": {
													"nativeSrc": "6295:278:10",
													"nodeType": "YulBlock",
													"src": "6295:278:10",
													"statements": [
														{
															"nativeSrc": "6305:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6305:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6351:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6351:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6319:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "6319:31:10"
																},
																"nativeSrc": "6319:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6319:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6309:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6309:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6366:95:10",
															"nodeType": "YulAssignment",
															"src": "6366:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6449:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6449:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6454:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6454:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6373:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "6373:75:10"
																},
																"nativeSrc": "6373:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6373:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6509:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6509:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6516:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6516:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6505:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:10"
																		},
																		"nativeSrc": "6505:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6505:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6523:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6528:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6470:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "6470:34:10"
																},
																"nativeSrc": "6470:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6470:65:10"
															},
															"nativeSrc": "6470:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6470:65:10"
														},
														{
															"nativeSrc": "6544:23:10",
															"nodeType": "YulAssignment",
															"src": "6544:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6555:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6555:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6560:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6560:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6551:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6551:3:10"
																},
																"nativeSrc": "6551:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6551:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6544:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6544:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6187:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6276:5:10",
														"nodeType": "YulTypedName",
														"src": "6276:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6283:3:10",
														"nodeType": "YulTypedName",
														"src": "6283:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6291:3:10",
														"nodeType": "YulTypedName",
														"src": "6291:3:10",
														"type": ""
													}
												],
												"src": "6187:386:10"
											},
											{
												"body": {
													"nativeSrc": "6759:247:10",
													"nodeType": "YulBlock",
													"src": "6759:247:10",
													"statements": [
														{
															"nativeSrc": "6770:100:10",
															"nodeType": "YulAssignment",
															"src": "6770:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6857:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6866:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6866:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6777:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "6777:79:10"
																},
																"nativeSrc": "6777:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6777:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:10"
																}
															]
														},
														{
															"nativeSrc": "6880:100:10",
															"nodeType": "YulAssignment",
															"src": "6880:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6967:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6967:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6976:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6976:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6887:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "6887:79:10"
																},
																"nativeSrc": "6887:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6887:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:10"
																}
															]
														},
														{
															"nativeSrc": "6990:10:10",
															"nodeType": "YulAssignment",
															"src": "6990:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6997:3:10",
																"nodeType": "YulIdentifier",
																"src": "6997:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6579:427:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6730:3:10",
														"nodeType": "YulTypedName",
														"src": "6730:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6736:6:10",
														"nodeType": "YulTypedName",
														"src": "6736:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6744:6:10",
														"nodeType": "YulTypedName",
														"src": "6744:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6755:3:10",
														"nodeType": "YulTypedName",
														"src": "6755:3:10",
														"type": ""
													}
												],
												"src": "6579:427:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063212e31d614610038578063661a03da14610068575b5f80fd5b610052600480360381019061004d9190610540565b610098565b60405161005f91906105f5565b60405180910390f35b610082600480360381019061007d9190610540565b6102b9565b60405161008f9190610624565b60405180910390f35b60605f601290505f836040516020016100b19190610624565b60405160208183030381529060405290505f670de0b6b3a7640000856100d79190610697565b90505f6100e3826102ee565b90505f8467ffffffffffffffff811115610100576100ff6106c7565b5b6040519080825280601f01601f1916602001820160405280156101325781602001600182028036833780820191505090505b5090505f61013f886102b9565b90505f600190505f60018861015491906106f4565b90505b5f811115610269575f828461016c91906106f4565b106101e5575f87838561017f91906106f4565b815181106101905761018f610727565b5b602001015160f81c60f81b9050808583815181106101b1576101b0610727565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a90535050610248565b7f300000000000000000000000000000000000000000000000000000000000000084828151811061021957610218610727565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505b818061025390610754565b92505080806102619061079b565b915050610157565b508360405160200161027b9190610846565b6040516020818303038152906040528360405160200161029c9291906108ab565b604051602081830303815290604052975050505050505050919050565b5f805b5f83146102e55780806102ce90610754565b915050600a836102de9190610697565b92506102bc565b80915050919050565b60605f60016102fc846103b8565b0190505f8167ffffffffffffffff81111561031a576103196106c7565b5b6040519080825280601f01601f19166020018201604052801561034c5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156103ad578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816103a2576103a161063d565b5b0494505f8503610359575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610414577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161040a5761040961063d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610451576d04ee2d6d415b85acef810000000083816104475761044661063d565b5b0492506020810190505b662386f26fc10000831061048057662386f26fc1000083816104765761047561063d565b5b0492506010810190505b6305f5e10083106104a9576305f5e100838161049f5761049e61063d565b5b0492506008810190505b61271083106104ce5761271083816104c4576104c361063d565b5b0492506004810190505b606483106104f157606483816104e7576104e661063d565b5b0492506002810190505b600a8310610500576001810190505b80915050919050565b5f80fd5b5f819050919050565b61051f8161050d565b8114610529575f80fd5b50565b5f8135905061053a81610516565b92915050565b5f6020828403121561055557610554610509565b5b5f6105628482850161052c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156105a2578082015181840152602081019050610587565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6105c78261056b565b6105d18185610575565b93506105e1818560208601610585565b6105ea816105ad565b840191505092915050565b5f6020820190508181035f83015261060d81846105bd565b905092915050565b61061e8161050d565b82525050565b5f6020820190506106375f830184610615565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106a18261050d565b91506106ac8361050d565b9250826106bc576106bb61063d565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6106fe8261050d565b91506107098361050d565b92508282039050818111156107215761072061066a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61075e8261050d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107905761078f61066a565b5b600182019050919050565b5f6107a58261050d565b91505f82036107b7576107b661066a565b5b600182039050919050565b5f81905092915050565b5f6107d68261056b565b6107e081856107c2565b93506107f0818560208601610585565b80840191505092915050565b7f2e000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6108306001836107c2565b915061083b826107fc565b600182019050919050565b5f61085182846107cc565b915061085c82610824565b915081905092915050565b5f81519050919050565b5f81905092915050565b5f61088582610867565b61088f8185610871565b935061089f818560208601610585565b80840191505092915050565b5f6108b6828561087b565b91506108c2828461087b565b9150819050939250505056fea2646970667358221220f55cdfd271494b1a2d7fdcd07fe5c437879c61fa6caa4340d4fcbae3f136190d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x212E31D6 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x661A03DA EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x12 SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3 DUP3 PUSH2 0x2EE JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x13F DUP9 PUSH2 0x2B9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 PUSH1 0x1 DUP9 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x269 JUMPI PUSH0 DUP3 DUP5 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST LT PUSH2 0x1E5 JUMPI PUSH0 DUP8 DUP4 DUP6 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x190 JUMPI PUSH2 0x18F PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP POP PUSH2 0x248 JUMP JUMPDEST PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP2 DUP1 PUSH2 0x253 SWAP1 PUSH2 0x754 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x261 SWAP1 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157 JUMP JUMPDEST POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29C SWAP3 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 DUP4 EQ PUSH2 0x2E5 JUMPI DUP1 DUP1 PUSH2 0x2CE SWAP1 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2FC DUP5 PUSH2 0x3B8 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x359 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x414 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x451 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x480 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x476 JUMPI PUSH2 0x475 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4A9 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4CE JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4C4 JUMPI PUSH2 0x4C3 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4F1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4E7 JUMPI PUSH2 0x4E6 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x500 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x50D JUMP JUMPDEST DUP2 EQ PUSH2 0x529 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53A DUP2 PUSH2 0x516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x509 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x562 DUP5 DUP3 DUP6 ADD PUSH2 0x52C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x587 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5C7 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x5D1 DUP2 DUP6 PUSH2 0x575 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST PUSH2 0x5EA DUP2 PUSH2 0x5AD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60D DUP2 DUP5 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x50D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6A1 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6BC JUMPI PUSH2 0x6BB PUSH2 0x63D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6FE DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x709 DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x721 JUMPI PUSH2 0x720 PUSH2 0x66A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x75E DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x790 JUMPI PUSH2 0x78F PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D6 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x7E0 DUP2 DUP6 PUSH2 0x7C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x7F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x830 PUSH1 0x1 DUP4 PUSH2 0x7C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x83B DUP3 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x851 DUP3 DUP5 PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP PUSH2 0x85C DUP3 PUSH2 0x824 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x885 DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x88F DUP2 DUP6 PUSH2 0x871 JUMP JUMPDEST SWAP4 POP PUSH2 0x89F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x585 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B6 DUP3 DUP6 PUSH2 0x87B JUMP JUMPDEST SWAP2 POP PUSH2 0x8C2 DUP3 DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5C 0xDF 0xD2 PUSH18 0x494B1A2D7FDCD07FE5C437879C61FA6CAA43 BLOCKHASH 0xD4 0xFC 0xBA 0xE3 CALL CALLDATASIZE NOT 0xD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "253:1261:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:823;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1302:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;473:823;537:13;563:12;578:2;563:17;;591:25;630:6;619:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;591:46;;679:18;709:6;700;:15;;;;:::i;:::-;679:36;;727:29;759:31;776:13;759:16;:31::i;:::-;727:63;;831:23;867:7;857:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:44;;886:8;897:21;911:6;897:13;:21::i;:::-;886:32;;929:6;936:1;929:8;;952:6;967:1;959:7;:9;;;;:::i;:::-;952:16;;948:246;972:1;970;:3;948:246;;;1004:1;1001;997:3;:5;;;;:::i;:::-;:8;994:171;;1025:8;1036:12;1053:1;1049:3;:5;;;;:::i;:::-;1036:19;;;;;;;;:::i;:::-;;;;;;;;;;1025:30;;1090:1;1074:10;1085:1;1074:13;;;;;;;;:::i;:::-;;;;;:17;;;;;;;;;;;1006:101;994:171;;;1130:19;:10;1141:1;1130:13;;;;;;;;:::i;:::-;;;;;:19;;;;;;;;;;;994:171;1179:3;;;;;:::i;:::-;;;;975;;;;;:::i;:::-;;;;948:246;;;;1252:15;1235:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;1275:10;1218:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1204:83;;;;;;;;;473:823;;;:::o;1302:209::-;1359:4;1376:11;1398:82;1415:1;1405:6;:11;1398:82;;1433:8;;;;;:::i;:::-;;;;1466:2;1456:12;;;;;:::i;:::-;;;1398:82;;;1497:6;1490:13;;;1302:209;;;:::o;637:698:5:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;12214:916:6:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:246::-;1386:1;1396:113;1410:6;1407:1;1404:13;1396:113;;;1495:1;1490:3;1486:11;1480:18;1476:1;1471:3;1467:11;1460:39;1432:2;1429:1;1425:10;1420:15;;1396:113;;;1543:1;1534:6;1529:3;1525:16;1518:27;1367:184;1305:246;;;:::o;1557:102::-;1598:6;1649:2;1645:7;1640:2;1633:5;1629:14;1625:28;1615:38;;1557:102;;;:::o;1665:377::-;1753:3;1781:39;1814:5;1781:39;:::i;:::-;1836:71;1900:6;1895:3;1836:71;:::i;:::-;1829:78;;1916:65;1974:6;1969:3;1962:4;1955:5;1951:16;1916:65;:::i;:::-;2006:29;2028:6;2006:29;:::i;:::-;2001:3;1997:39;1990:46;;1757:285;1665:377;;;;:::o;2048:313::-;2161:4;2199:2;2188:9;2184:18;2176:26;;2248:9;2242:4;2238:20;2234:1;2223:9;2219:17;2212:47;2276:78;2349:4;2340:6;2276:78;:::i;:::-;2268:86;;2048:313;;;;:::o;2367:118::-;2454:24;2472:5;2454:24;:::i;:::-;2449:3;2442:37;2367:118;;:::o;2491:222::-;2584:4;2622:2;2611:9;2607:18;2599:26;;2635:71;2703:1;2692:9;2688:17;2679:6;2635:71;:::i;:::-;2491:222;;;;:::o;2719:180::-;2767:77;2764:1;2757:88;2864:4;2861:1;2854:15;2888:4;2885:1;2878:15;2905:180;2953:77;2950:1;2943:88;3050:4;3047:1;3040:15;3074:4;3071:1;3064:15;3091:185;3131:1;3148:20;3166:1;3148:20;:::i;:::-;3143:25;;3182:20;3200:1;3182:20;:::i;:::-;3177:25;;3221:1;3211:35;;3226:18;;:::i;:::-;3211:35;3268:1;3265;3261:9;3256:14;;3091:185;;;;:::o;3282:180::-;3330:77;3327:1;3320:88;3427:4;3424:1;3417:15;3451:4;3448:1;3441:15;3468:194;3508:4;3528:20;3546:1;3528:20;:::i;:::-;3523:25;;3562:20;3580:1;3562:20;:::i;:::-;3557:25;;3606:1;3603;3599:9;3591:17;;3630:1;3624:4;3621:11;3618:37;;;3635:18;;:::i;:::-;3618:37;3468:194;;;;:::o;3668:180::-;3716:77;3713:1;3706:88;3813:4;3810:1;3803:15;3837:4;3834:1;3827:15;3854:233;3893:3;3916:24;3934:5;3916:24;:::i;:::-;3907:33;;3962:66;3955:5;3952:77;3949:103;;4032:18;;:::i;:::-;3949:103;4079:1;4072:5;4068:13;4061:20;;3854:233;;;:::o;4093:171::-;4132:3;4155:24;4173:5;4155:24;:::i;:::-;4146:33;;4201:4;4194:5;4191:15;4188:41;;4209:18;;:::i;:::-;4188:41;4256:1;4249:5;4245:13;4238:20;;4093:171;;;:::o;4270:148::-;4372:11;4409:3;4394:18;;4270:148;;;;:::o;4424:390::-;4530:3;4558:39;4591:5;4558:39;:::i;:::-;4613:89;4695:6;4690:3;4613:89;:::i;:::-;4606:96;;4711:65;4769:6;4764:3;4757:4;4750:5;4746:16;4711:65;:::i;:::-;4801:6;4796:3;4792:16;4785:23;;4534:280;4424:390;;;;:::o;4820:151::-;4960:3;4956:1;4948:6;4944:14;4937:27;4820:151;:::o;4977:400::-;5137:3;5158:84;5240:1;5235:3;5158:84;:::i;:::-;5151:91;;5251:93;5340:3;5251:93;:::i;:::-;5369:1;5364:3;5360:11;5353:18;;4977:400;;;:::o;5383:541::-;5616:3;5638:95;5729:3;5720:6;5638:95;:::i;:::-;5631:102;;5750:148;5894:3;5750:148;:::i;:::-;5743:155;;5915:3;5908:10;;5383:541;;;;:::o;5930:98::-;5981:6;6015:5;6009:12;5999:22;;5930:98;;;:::o;6034:147::-;6135:11;6172:3;6157:18;;6034:147;;;;:::o;6187:386::-;6291:3;6319:38;6351:5;6319:38;:::i;:::-;6373:88;6454:6;6449:3;6373:88;:::i;:::-;6366:95;;6470:65;6528:6;6523:3;6516:4;6509:5;6505:16;6470:65;:::i;:::-;6560:6;6555:3;6551:16;6544:23;;6295:278;6187:386;;;;:::o;6579:427::-;6755:3;6777:93;6866:3;6857:6;6777:93;:::i;:::-;6770:100;;6887:93;6976:3;6967:6;6887:93;:::i;:::-;6880:100;;6997:3;6990:10;;6579:427;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "461600",
								"executionCost": "497",
								"totalCost": "462097"
							},
							"external": {
								"convertToSmallerUnit(uint256)": "infinite",
								"getUintLength(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 1514,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f55cdfd271494b1a2d7fdcd07fe5c437879c61fa6caa4340d4fcbae3f136190d64736f6c63430008160033",
									".code": [
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "212E31D6"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "661A03DA"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 253,
											"end": 1514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 473,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 473,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1302,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1302,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1302,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 537,
											"end": 550,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 563,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 563,
											"end": 580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 563,
											"end": 580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 636,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 619,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 619,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 591,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 591,
											"end": 637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 679,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 700,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 700,
											"end": 715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 700,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 700,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 715,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 679,
											"end": 715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 679,
											"end": 715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 759,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 727,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 727,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 831,
											"end": 854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 874,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 857,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 857,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 831,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 831,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 886,
											"end": 894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 897,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 897,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 897,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 886,
											"end": 918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 952,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 968,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 959,
											"end": 966,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 959,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 959,
											"end": 968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 959,
											"end": 968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 959,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 952,
											"end": 968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 952,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 970,
											"end": 973,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 997,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1005,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1052,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1049,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1036,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1036,
											"end": 1055,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1074,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1130,
											"end": 1140,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1130,
											"end": 1143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1179,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 975,
											"end": 978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 975,
											"end": 978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 975,
											"end": 978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 975,
											"end": 978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1252,
											"end": 1267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1235,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1218,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1405,
											"end": 1416,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1433,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1466,
											"end": 1468,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1456,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1398,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1653,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1781,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1836,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1916,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2006,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2004,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 2042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2276,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2485,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2367,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2472,
											"end": 2477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2454,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2478,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2454,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2635,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2706,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2635,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2899,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2719,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2844,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2892,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2893,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 3085,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2905,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3030,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3054,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3078,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3148,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3168,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3148,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3182,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3182,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3177,
											"end": 3202,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3177,
											"end": 3202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3211,
											"end": 3246,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3226,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3211,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3282,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3407,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3528,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3562,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3562,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3632,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3618,
											"end": 3655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3635,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3655,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3618,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3668,
											"end": 3848,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3668,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 4087,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3854,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3916,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3916,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3907,
											"end": 3940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3907,
											"end": 3940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3962,
											"end": 4028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 4029,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3949,
											"end": 4052,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4032,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4032,
											"end": 4050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4050,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4032,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 4052,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3949,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4061,
											"end": 4081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4061,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 4087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 4087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 4087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 4087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4264,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4093,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4173,
											"end": 4178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4155,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4201,
											"end": 4205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4206,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4209,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4188,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4591,
											"end": 4596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4558,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4695,
											"end": 4701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4690,
											"end": 4693,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4613,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4613,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4702,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4769,
											"end": 4775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4767,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4755,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4711,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4776,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4711,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4785,
											"end": 4808,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4785,
											"end": 4808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4971,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4820,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 4958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4977,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5240,
											"end": 5241,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5235,
											"end": 5238,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5158,
											"end": 5242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5242,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5158,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5251,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5344,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5251,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5360,
											"end": 5371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5616,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5729,
											"end": 5732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5720,
											"end": 5726,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5638,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5733,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5638,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5750,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5750,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5750,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5750,
											"end": 5898,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5750,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 6028,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5930,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6021,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 6028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 6028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 6028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 6028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 6351,
											"end": 6356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 6319,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6357,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 6319,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6449,
											"end": 6452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6373,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6373,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6461,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6509,
											"end": 6514,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6470,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6535,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 6470,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6558,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6295,
											"end": 6573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6755,
											"end": 6758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6866,
											"end": 6869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6777,
											"end": 6870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6870,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6777,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6770,
											"end": 6870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6770,
											"end": 6870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6973,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6887,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6980,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6887,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 7006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyERC20.sol",
								"contracts/utils/MyStringUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"convertToSmallerUnit(uint256)": "212e31d6",
							"getUintLength(uint256)": "661a03da"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"convertToSmallerUnit\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getUintLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyERC20.sol\":\"MyERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MyERC20.sol\":{\"keccak256\":\"0xcc4352f81c49852410705e5fee4f5d1d12d48e6e4cb135c29812508d8c82011b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29b960b6a15cd6f146531703738cc52beb44d52ca61981b219b6a3b73c1ba47b\",\"dweb:/ipfs/QmfLDTsuZTqaBouV3HBTM8fyQn8Cr4JVjEkpEuqHS6wkxq\"]},\"contracts/utils/MyStringUtils.sol\":{\"keccak256\":\"0xd1b89563976afd5808c3353ee21f50c99479262b3e5eef7554fb3779703f5b37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768f4bd7f66d4ab07e393b29b5d132fa5f4f92af44a73baf663fe04768d4914f\",\"dweb:/ipfs/QmREBNkQWueEFZ5SypAk8y9wD6F9omB4fEvmaPYogHntxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/MyStringUtils.sol": {
				"MyStringUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str1",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "str2",
									"type": "string"
								}
							],
							"name": "strcat",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "startInd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endInd",
									"type": "uint256"
								}
							],
							"name": "substring",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/MyStringUtils.sol\":78:911  library MyStringUtils{... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/MyStringUtils.sol\":78:911  library MyStringUtils{... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1dcd9b55\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd824ccf3\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/utils/MyStringUtils.sol\":558:908  function substring(string memory str, uint startInd, uint endInd) public pure returns(string memory){... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/MyStringUtils.sol\":106:552  function strcat(string memory str1, string memory str2) public pure returns(string memory) {... */\n    tag_3:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/MyStringUtils.sol\":558:908  function substring(string memory str, uint startInd, uint endInd) public pure returns(string memory){... */\n    tag_7:\n        /* \"contracts/utils/MyStringUtils.sol\":644:657  string memory */\n      0x60\n        /* \"contracts/utils/MyStringUtils.sol\":669:690  bytes memory strBytes */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":699:702  str */\n      dup5\n        /* \"contracts/utils/MyStringUtils.sol\":669:703  bytes memory strBytes = bytes(str) */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":714:733  bytes memory endStr */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":755:763  startInd */\n      dup5\n        /* \"contracts/utils/MyStringUtils.sol\":746:752  endInd */\n      dup5\n        /* \"contracts/utils/MyStringUtils.sol\":746:763  endInd - startInd */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/utils/MyStringUtils.sol\":736:764  new bytes(endInd - startInd) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n    tag_18:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_21:\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":714:764  bytes memory endStr = new bytes(endInd - startInd) */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":779:785  uint i */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":786:794  startInd */\n      dup6\n        /* \"contracts/utils/MyStringUtils.sol\":779:794  uint i=startInd */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":775:869  for(uint i=startInd; i<endInd; i++){... */\n    tag_22:\n        /* \"contracts/utils/MyStringUtils.sol\":798:804  endInd */\n      dup5\n        /* \"contracts/utils/MyStringUtils.sol\":796:797  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":796:804  i<endInd */\n      lt\n        /* \"contracts/utils/MyStringUtils.sol\":775:869  for(uint i=startInd; i<endInd; i++){... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/utils/MyStringUtils.sol\":846:854  strBytes */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":855:856  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":846:857  strBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_25\n      jumpi\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n    tag_25:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/utils/MyStringUtils.sol\":825:831  endStr */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":834:842  startInd */\n      dup8\n        /* \"contracts/utils/MyStringUtils.sol\":832:833  i */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":832:842  i-startInd */\n      tag_28\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_28:\n        /* \"contracts/utils/MyStringUtils.sol\":825:843  endStr[i-startInd] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      tag_30\n      tag_27\n      jump\t// in\n    tag_30:\n    tag_29:\n      0x20\n      add\n      add\n        /* \"contracts/utils/MyStringUtils.sol\":825:857  endStr[i-startInd] = strBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":806:809  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":775:869  for(uint i=startInd; i<endInd; i++){... */\n      jump(tag_22)\n    tag_23:\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":893:899  endStr */\n      dup1\n        /* \"contracts/utils/MyStringUtils.sol\":879:900  return string(endStr) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":558:908  function substring(string memory str, uint startInd, uint endInd) public pure returns(string memory){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/MyStringUtils.sol\":106:552  function strcat(string memory str1, string memory str2) public pure returns(string memory) {... */\n    tag_13:\n        /* \"contracts/utils/MyStringUtils.sol\":182:195  string memory */\n      0x60\n        /* \"contracts/utils/MyStringUtils.sol\":208:223  bytes memory s1 */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":232:236  str1 */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":208:237  bytes memory s1 = bytes(str1) */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":248:263  bytes memory s2 */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":272:276  str2 */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":248:277  bytes memory s2 = bytes(str2) */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":288:304  bytes memory res */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":329:331  s2 */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":329:338  s2.length */\n      mload\n        /* \"contracts/utils/MyStringUtils.sol\":317:319  s1 */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":317:326  s1.length */\n      mload\n        /* \"contracts/utils/MyStringUtils.sol\":317:338  s1.length + s2.length */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"contracts/utils/MyStringUtils.sol\":307:339  new bytes(s1.length + s2.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      tag_35\n      tag_20\n      jump\t// in\n    tag_35:\n    tag_34:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_36\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_36:\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":288:339  bytes memory res = new bytes(s1.length + s2.length) */\n      swap1\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":354:360  uint i */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":350:422  for(uint i=0; i<s1.length; i++){... */\n    tag_37:\n        /* \"contracts/utils/MyStringUtils.sol\":366:368  s1 */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":366:375  s1.length */\n      mload\n        /* \"contracts/utils/MyStringUtils.sol\":364:365  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":364:375  i<s1.length */\n      lt\n        /* \"contracts/utils/MyStringUtils.sol\":350:422  for(uint i=0; i<s1.length; i++){... */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/utils/MyStringUtils.sol\":405:407  s1 */\n      dup4\n        /* \"contracts/utils/MyStringUtils.sol\":408:409  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":405:410  s1[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_41\n      tag_27\n      jump\t// in\n    tag_41:\n    tag_40:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/utils/MyStringUtils.sol\":396:399  res */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":400:401  i */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":396:402  res[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_42\n      jumpi\n      tag_43\n      tag_27\n      jump\t// in\n    tag_43:\n    tag_42:\n      0x20\n      add\n      add\n        /* \"contracts/utils/MyStringUtils.sol\":396:410  res[i] = s1[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":377:380  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":350:422  for(uint i=0; i<s1.length; i++){... */\n      jump(tag_37)\n    tag_38:\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":436:442  uint i */\n      0x00\n        /* \"contracts/utils/MyStringUtils.sol\":432:516  for(uint i=0; i<s2.length; i++){... */\n    tag_44:\n        /* \"contracts/utils/MyStringUtils.sol\":448:450  s2 */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":448:457  s2.length */\n      mload\n        /* \"contracts/utils/MyStringUtils.sol\":446:447  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":446:457  i<s2.length */\n      lt\n        /* \"contracts/utils/MyStringUtils.sol\":432:516  for(uint i=0; i<s2.length; i++){... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/utils/MyStringUtils.sol\":499:501  s2 */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":502:503  i */\n      dup2\n        /* \"contracts/utils/MyStringUtils.sol\":499:504  s2[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_27\n      jump\t// in\n    tag_48:\n    tag_47:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/utils/MyStringUtils.sol\":478:481  res */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":494:495  i */\n      dup3\n        /* \"contracts/utils/MyStringUtils.sol\":482:484  s1 */\n      dup7\n        /* \"contracts/utils/MyStringUtils.sol\":482:491  s1.length */\n      mload\n        /* \"contracts/utils/MyStringUtils.sol\":482:495  s1.length + i */\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"contracts/utils/MyStringUtils.sol\":478:496  res[s1.length + i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_27\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      add\n      add\n        /* \"contracts/utils/MyStringUtils.sol\":478:504  res[s1.length + i] = s2[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":459:462  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":432:516  for(uint i=0; i<s2.length; i++){... */\n      jump(tag_44)\n    tag_45:\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":540:543  res */\n      dup1\n        /* \"contracts/utils/MyStringUtils.sol\":526:544  return string(res) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/utils/MyStringUtils.sol\":106:552  function strcat(string memory str1, string memory str2) public pure returns(string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_52:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_54:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_55:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_56:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_57:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_20:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_58:\n        /* \"#utility.yul\":957:984   */\n      tag_81\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_57\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_83\n      tag_20\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1030:1118   */\n    tag_82:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_59:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_85\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_86\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_58\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_60:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_89\n      tag_20\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1434:1490   */\n    tag_88:\n        /* \"#utility.yul\":1508:1537   */\n      tag_90\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_57\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1756   */\n    tag_61:\n        /* \"#utility.yul\":1707:1713   */\n      dup3\n        /* \"#utility.yul\":1702:1705   */\n      dup2\n        /* \"#utility.yul\":1697:1700   */\n      dup4\n        /* \"#utility.yul\":1684:1714   */\n      calldatacopy\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1739:1745   */\n      dup4\n        /* \"#utility.yul\":1734:1737   */\n      dup4\n        /* \"#utility.yul\":1730:1746   */\n      add\n        /* \"#utility.yul\":1723:1750   */\n      mstore\n        /* \"#utility.yul\":1610:1756   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1762:2187   */\n    tag_62:\n        /* \"#utility.yul\":1840:1845   */\n      0x00\n        /* \"#utility.yul\":1865:1931   */\n      tag_93\n        /* \"#utility.yul\":1881:1930   */\n      tag_94\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1881:1930   */\n      tag_60\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1865:1931   */\n      tag_59\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1856:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1952   */\n      dup2\n        /* \"#utility.yul\":1940:1961   */\n      mstore\n        /* \"#utility.yul\":1992:1996   */\n      0x20\n        /* \"#utility.yul\":1985:1990   */\n      dup2\n        /* \"#utility.yul\":1981:1997   */\n      add\n        /* \"#utility.yul\":2030:2033   */\n      dup5\n        /* \"#utility.yul\":2021:2027   */\n      dup5\n        /* \"#utility.yul\":2016:2019   */\n      dup5\n        /* \"#utility.yul\":2012:2028   */\n      add\n        /* \"#utility.yul\":2009:2034   */\n      gt\n        /* \"#utility.yul\":2006:2118   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2037:2116   */\n      tag_96\n      tag_56\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2006:2118   */\n    tag_95:\n        /* \"#utility.yul\":2127:2181   */\n      tag_97\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2169:2172   */\n      dup3\n        /* \"#utility.yul\":2164:2167   */\n      dup6\n        /* \"#utility.yul\":2127:2181   */\n      tag_61\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1846:2187   */\n      pop\n        /* \"#utility.yul\":1762:2187   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2207:2547   */\n    tag_63:\n        /* \"#utility.yul\":2263:2268   */\n      0x00\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2305:2309   */\n      0x1f\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2293:2310   */\n      add\n        /* \"#utility.yul\":2289:2316   */\n      slt\n        /* \"#utility.yul\":2279:2401   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2320:2399   */\n      tag_100\n      tag_55\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2279:2401   */\n    tag_99:\n        /* \"#utility.yul\":2437:2443   */\n      dup2\n        /* \"#utility.yul\":2424:2444   */\n      calldataload\n        /* \"#utility.yul\":2462:2541   */\n      tag_101\n        /* \"#utility.yul\":2537:2540   */\n      dup5\n        /* \"#utility.yul\":2529:2535   */\n      dup3\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2514:2520   */\n      dup7\n        /* \"#utility.yul\":2510:2527   */\n      add\n        /* \"#utility.yul\":2462:2541   */\n      tag_62\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2453:2541   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2547   */\n      pop\n        /* \"#utility.yul\":2207:2547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2630   */\n    tag_64:\n        /* \"#utility.yul\":2590:2597   */\n      0x00\n        /* \"#utility.yul\":2619:2624   */\n      dup2\n        /* \"#utility.yul\":2608:2624   */\n      swap1\n      pop\n        /* \"#utility.yul\":2553:2630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2636:2758   */\n    tag_65:\n        /* \"#utility.yul\":2709:2733   */\n      tag_104\n        /* \"#utility.yul\":2727:2732   */\n      dup2\n        /* \"#utility.yul\":2709:2733   */\n      tag_64\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2702:2707   */\n      dup2\n        /* \"#utility.yul\":2699:2734   */\n      eq\n        /* \"#utility.yul\":2689:2752   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2689:2752   */\n    tag_105:\n        /* \"#utility.yul\":2636:2758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2903   */\n    tag_66:\n        /* \"#utility.yul\":2810:2815   */\n      0x00\n        /* \"#utility.yul\":2848:2854   */\n      dup2\n        /* \"#utility.yul\":2835:2855   */\n      calldataload\n        /* \"#utility.yul\":2826:2855   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:2897   */\n      tag_107\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2864:2897   */\n      tag_65\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2764:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3708   */\n    tag_6:\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3004:3010   */\n      dup1\n        /* \"#utility.yul\":3012:3018   */\n      0x00\n        /* \"#utility.yul\":3061:3063   */\n      0x60\n        /* \"#utility.yul\":3049:3058   */\n      dup5\n        /* \"#utility.yul\":3040:3047   */\n      dup7\n        /* \"#utility.yul\":3036:3059   */\n      sub\n        /* \"#utility.yul\":3032:3064   */\n      slt\n        /* \"#utility.yul\":3029:3148   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":3067:3146   */\n      tag_110\n      tag_53\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3029:3148   */\n    tag_109:\n        /* \"#utility.yul\":3215:3216   */\n      0x00\n        /* \"#utility.yul\":3204:3213   */\n      dup5\n        /* \"#utility.yul\":3200:3217   */\n      add\n        /* \"#utility.yul\":3187:3218   */\n      calldataload\n        /* \"#utility.yul\":3245:3263   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3237:3243   */\n      dup2\n        /* \"#utility.yul\":3234:3264   */\n      gt\n        /* \"#utility.yul\":3231:3348   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3267:3346   */\n      tag_112\n      tag_54\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3231:3348   */\n    tag_111:\n        /* \"#utility.yul\":3372:3435   */\n      tag_113\n        /* \"#utility.yul\":3427:3434   */\n      dup7\n        /* \"#utility.yul\":3418:3424   */\n      dup3\n        /* \"#utility.yul\":3407:3416   */\n      dup8\n        /* \"#utility.yul\":3403:3425   */\n      add\n        /* \"#utility.yul\":3372:3435   */\n      tag_63\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3362:3435   */\n      swap4\n      pop\n        /* \"#utility.yul\":3158:3445   */\n      pop\n        /* \"#utility.yul\":3484:3486   */\n      0x20\n        /* \"#utility.yul\":3510:3563   */\n      tag_114\n        /* \"#utility.yul\":3555:3562   */\n      dup7\n        /* \"#utility.yul\":3546:3552   */\n      dup3\n        /* \"#utility.yul\":3535:3544   */\n      dup8\n        /* \"#utility.yul\":3531:3553   */\n      add\n        /* \"#utility.yul\":3510:3563   */\n      tag_66\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3500:3563   */\n      swap3\n      pop\n        /* \"#utility.yul\":3455:3573   */\n      pop\n        /* \"#utility.yul\":3612:3614   */\n      0x40\n        /* \"#utility.yul\":3638:3691   */\n      tag_115\n        /* \"#utility.yul\":3683:3690   */\n      dup7\n        /* \"#utility.yul\":3674:3680   */\n      dup3\n        /* \"#utility.yul\":3663:3672   */\n      dup8\n        /* \"#utility.yul\":3659:3681   */\n      add\n        /* \"#utility.yul\":3638:3691   */\n      tag_66\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3628:3691   */\n      swap2\n      pop\n        /* \"#utility.yul\":3583:3701   */\n      pop\n        /* \"#utility.yul\":2909:3708   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3714:3813   */\n    tag_67:\n        /* \"#utility.yul\":3766:3772   */\n      0x00\n        /* \"#utility.yul\":3800:3805   */\n      dup2\n        /* \"#utility.yul\":3794:3806   */\n      mload\n        /* \"#utility.yul\":3784:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3819:3996   */\n    tag_68:\n        /* \"#utility.yul\":3911:3922   */\n      0x00\n        /* \"#utility.yul\":3945:3951   */\n      dup3\n        /* \"#utility.yul\":3940:3943   */\n      dup3\n        /* \"#utility.yul\":3933:3952   */\n      mstore\n        /* \"#utility.yul\":3985:3989   */\n      0x20\n        /* \"#utility.yul\":3980:3983   */\n      dup3\n        /* \"#utility.yul\":3976:3990   */\n      add\n        /* \"#utility.yul\":3961:3990   */\n      swap1\n      pop\n        /* \"#utility.yul\":3819:3996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4002:4248   */\n    tag_69:\n        /* \"#utility.yul\":4083:4084   */\n      0x00\n        /* \"#utility.yul\":4093:4206   */\n    tag_119:\n        /* \"#utility.yul\":4107:4113   */\n      dup4\n        /* \"#utility.yul\":4104:4105   */\n      dup2\n        /* \"#utility.yul\":4101:4114   */\n      lt\n        /* \"#utility.yul\":4093:4206   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4192:4193   */\n      dup1\n        /* \"#utility.yul\":4187:4190   */\n      dup3\n        /* \"#utility.yul\":4183:4194   */\n      add\n        /* \"#utility.yul\":4177:4195   */\n      mload\n        /* \"#utility.yul\":4173:4174   */\n      dup2\n        /* \"#utility.yul\":4168:4171   */\n      dup5\n        /* \"#utility.yul\":4164:4175   */\n      add\n        /* \"#utility.yul\":4157:4196   */\n      mstore\n        /* \"#utility.yul\":4129:4131   */\n      0x20\n        /* \"#utility.yul\":4126:4127   */\n      dup2\n        /* \"#utility.yul\":4122:4132   */\n      add\n        /* \"#utility.yul\":4117:4132   */\n      swap1\n      pop\n        /* \"#utility.yul\":4093:4206   */\n      jump(tag_119)\n    tag_121:\n        /* \"#utility.yul\":4240:4241   */\n      0x00\n        /* \"#utility.yul\":4231:4237   */\n      dup5\n        /* \"#utility.yul\":4226:4229   */\n      dup5\n        /* \"#utility.yul\":4222:4238   */\n      add\n        /* \"#utility.yul\":4215:4242   */\n      mstore\n        /* \"#utility.yul\":4064:4248   */\n      pop\n        /* \"#utility.yul\":4002:4248   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4647   */\n    tag_70:\n        /* \"#utility.yul\":4350:4353   */\n      0x00\n        /* \"#utility.yul\":4378:4417   */\n      tag_123\n        /* \"#utility.yul\":4411:4416   */\n      dup3\n        /* \"#utility.yul\":4378:4417   */\n      tag_67\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4433:4512   */\n      tag_124\n        /* \"#utility.yul\":4505:4511   */\n      dup2\n        /* \"#utility.yul\":4500:4503   */\n      dup6\n        /* \"#utility.yul\":4433:4512   */\n      tag_68\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4426:4512   */\n      swap4\n      pop\n        /* \"#utility.yul\":4521:4586   */\n      tag_125\n        /* \"#utility.yul\":4579:4585   */\n      dup2\n        /* \"#utility.yul\":4574:4577   */\n      dup6\n        /* \"#utility.yul\":4567:4571   */\n      0x20\n        /* \"#utility.yul\":4560:4565   */\n      dup7\n        /* \"#utility.yul\":4556:4572   */\n      add\n        /* \"#utility.yul\":4521:4586   */\n      tag_69\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4611:4640   */\n      tag_126\n        /* \"#utility.yul\":4633:4639   */\n      dup2\n        /* \"#utility.yul\":4611:4640   */\n      tag_57\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4606:4609   */\n      dup5\n        /* \"#utility.yul\":4602:4641   */\n      add\n        /* \"#utility.yul\":4595:4641   */\n      swap2\n      pop\n        /* \"#utility.yul\":4354:4647   */\n      pop\n        /* \"#utility.yul\":4254:4647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:4982   */\n    tag_9:\n        /* \"#utility.yul\":4774:4778   */\n      0x00\n        /* \"#utility.yul\":4812:4814   */\n      0x20\n        /* \"#utility.yul\":4801:4810   */\n      dup3\n        /* \"#utility.yul\":4797:4815   */\n      add\n        /* \"#utility.yul\":4789:4815   */\n      swap1\n      pop\n        /* \"#utility.yul\":4861:4870   */\n      dup2\n        /* \"#utility.yul\":4855:4859   */\n      dup2\n        /* \"#utility.yul\":4851:4871   */\n      sub\n        /* \"#utility.yul\":4847:4848   */\n      0x00\n        /* \"#utility.yul\":4836:4845   */\n      dup4\n        /* \"#utility.yul\":4832:4849   */\n      add\n        /* \"#utility.yul\":4825:4872   */\n      mstore\n        /* \"#utility.yul\":4889:4975   */\n      tag_128\n        /* \"#utility.yul\":4970:4974   */\n      dup2\n        /* \"#utility.yul\":4961:4967   */\n      dup5\n        /* \"#utility.yul\":4889:4975   */\n      tag_70\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4881:4975   */\n      swap1\n      pop\n        /* \"#utility.yul\":4653:4982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4988:5822   */\n    tag_12:\n        /* \"#utility.yul\":5076:5082   */\n      0x00\n        /* \"#utility.yul\":5084:5090   */\n      dup1\n        /* \"#utility.yul\":5133:5135   */\n      0x40\n        /* \"#utility.yul\":5121:5130   */\n      dup4\n        /* \"#utility.yul\":5112:5119   */\n      dup6\n        /* \"#utility.yul\":5108:5131   */\n      sub\n        /* \"#utility.yul\":5104:5136   */\n      slt\n        /* \"#utility.yul\":5101:5220   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":5139:5218   */\n      tag_131\n      tag_53\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5101:5220   */\n    tag_130:\n        /* \"#utility.yul\":5287:5288   */\n      0x00\n        /* \"#utility.yul\":5276:5285   */\n      dup4\n        /* \"#utility.yul\":5272:5289   */\n      add\n        /* \"#utility.yul\":5259:5290   */\n      calldataload\n        /* \"#utility.yul\":5317:5335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5309:5315   */\n      dup2\n        /* \"#utility.yul\":5306:5336   */\n      gt\n        /* \"#utility.yul\":5303:5420   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5339:5418   */\n      tag_133\n      tag_54\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5303:5420   */\n    tag_132:\n        /* \"#utility.yul\":5444:5507   */\n      tag_134\n        /* \"#utility.yul\":5499:5506   */\n      dup6\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup7\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_63\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5434:5507   */\n      swap3\n      pop\n        /* \"#utility.yul\":5230:5517   */\n      pop\n        /* \"#utility.yul\":5584:5586   */\n      0x20\n        /* \"#utility.yul\":5573:5582   */\n      dup4\n        /* \"#utility.yul\":5569:5587   */\n      add\n        /* \"#utility.yul\":5556:5588   */\n      calldataload\n        /* \"#utility.yul\":5615:5633   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5607:5613   */\n      dup2\n        /* \"#utility.yul\":5604:5634   */\n      gt\n        /* \"#utility.yul\":5601:5718   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":5637:5716   */\n      tag_136\n      tag_54\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5601:5718   */\n    tag_135:\n        /* \"#utility.yul\":5742:5805   */\n      tag_137\n        /* \"#utility.yul\":5797:5804   */\n      dup6\n        /* \"#utility.yul\":5788:5794   */\n      dup3\n        /* \"#utility.yul\":5777:5786   */\n      dup7\n        /* \"#utility.yul\":5773:5795   */\n      add\n        /* \"#utility.yul\":5742:5805   */\n      tag_63\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5732:5805   */\n      swap2\n      pop\n        /* \"#utility.yul\":5527:5815   */\n      pop\n        /* \"#utility.yul\":4988:5822   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5828:6008   */\n    tag_71:\n        /* \"#utility.yul\":5876:5953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5873:5874   */\n      0x00\n        /* \"#utility.yul\":5866:5954   */\n      mstore\n        /* \"#utility.yul\":5973:5977   */\n      0x11\n        /* \"#utility.yul\":5970:5971   */\n      0x04\n        /* \"#utility.yul\":5963:5978   */\n      mstore\n        /* \"#utility.yul\":5997:6001   */\n      0x24\n        /* \"#utility.yul\":5994:5995   */\n      0x00\n        /* \"#utility.yul\":5987:6002   */\n      revert\n        /* \"#utility.yul\":6014:6208   */\n    tag_17:\n        /* \"#utility.yul\":6054:6058   */\n      0x00\n        /* \"#utility.yul\":6074:6094   */\n      tag_140\n        /* \"#utility.yul\":6092:6093   */\n      dup3\n        /* \"#utility.yul\":6074:6094   */\n      tag_64\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6069:6094   */\n      swap2\n      pop\n        /* \"#utility.yul\":6108:6128   */\n      tag_141\n        /* \"#utility.yul\":6126:6127   */\n      dup4\n        /* \"#utility.yul\":6108:6128   */\n      tag_64\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":6103:6128   */\n      swap3\n      pop\n        /* \"#utility.yul\":6152:6153   */\n      dup3\n        /* \"#utility.yul\":6149:6150   */\n      dup3\n        /* \"#utility.yul\":6145:6154   */\n      sub\n        /* \"#utility.yul\":6137:6154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6176:6177   */\n      dup2\n        /* \"#utility.yul\":6170:6174   */\n      dup2\n        /* \"#utility.yul\":6167:6178   */\n      gt\n        /* \"#utility.yul\":6164:6201   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":6181:6199   */\n      tag_143\n      tag_71\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6164:6201   */\n    tag_142:\n        /* \"#utility.yul\":6014:6208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6214:6394   */\n    tag_27:\n        /* \"#utility.yul\":6262:6339   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6259:6260   */\n      0x00\n        /* \"#utility.yul\":6252:6340   */\n      mstore\n        /* \"#utility.yul\":6359:6363   */\n      0x32\n        /* \"#utility.yul\":6356:6357   */\n      0x04\n        /* \"#utility.yul\":6349:6364   */\n      mstore\n        /* \"#utility.yul\":6383:6387   */\n      0x24\n        /* \"#utility.yul\":6380:6381   */\n      0x00\n        /* \"#utility.yul\":6373:6388   */\n      revert\n        /* \"#utility.yul\":6400:6591   */\n    tag_33:\n        /* \"#utility.yul\":6440:6443   */\n      0x00\n        /* \"#utility.yul\":6459:6479   */\n      tag_146\n        /* \"#utility.yul\":6477:6478   */\n      dup3\n        /* \"#utility.yul\":6459:6479   */\n      tag_64\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6454:6479   */\n      swap2\n      pop\n        /* \"#utility.yul\":6493:6513   */\n      tag_147\n        /* \"#utility.yul\":6511:6512   */\n      dup4\n        /* \"#utility.yul\":6493:6513   */\n      tag_64\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6488:6513   */\n      swap3\n      pop\n        /* \"#utility.yul\":6536:6537   */\n      dup3\n        /* \"#utility.yul\":6533:6534   */\n      dup3\n        /* \"#utility.yul\":6529:6538   */\n      add\n        /* \"#utility.yul\":6522:6538   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6560   */\n      dup1\n        /* \"#utility.yul\":6554:6555   */\n      dup3\n        /* \"#utility.yul\":6551:6561   */\n      gt\n        /* \"#utility.yul\":6548:6584   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":6564:6582   */\n      tag_149\n      tag_71\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6548:6584   */\n    tag_148:\n        /* \"#utility.yul\":6400:6591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd3e6c938b80520ad75d863aa9082aa0e6fbae0672d49325d2d6db24522f7bac64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6106f661004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c80631dcd9b5514610043578063d824ccf314610073575b5f80fd5b61005d60048036038101906100589190610484565b6100a3565b60405161006a919061056a565b60405180910390f35b61008d6004803603810190610088919061058a565b610195565b60405161009a919061056a565b60405180910390f35b60605f8490505f84846100b6919061062d565b67ffffffffffffffff8111156100cf576100ce61032d565b5b6040519080825280601f01601f1916602001820160405280156101015781602001600182028036833780820191505090505b5090505f8590505b848110156101885782818151811061012457610123610660565b5b602001015160f81c60f81b82878361013c919061062d565b8151811061014d5761014c610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053508080600101915050610109565b5080925050509392505050565b60605f8390505f8390505f815183516101ae919061068d565b67ffffffffffffffff8111156101c7576101c661032d565b5b6040519080825280601f01601f1916602001820160405280156101f95781602001600182028036833780820191505090505b5090505f5b83518110156102735783818151811061021a57610219610660565b5b602001015160f81c60f81b82828151811061023857610237610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a90535080806001019150506101fe565b505f5b82518110156102f75782818151811061029257610291610660565b5b602001015160f81c60f81b828286516102ab919061068d565b815181106102bc576102bb610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053508080600101915050610276565b5080935050505092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103638261031d565b810181811067ffffffffffffffff821117156103825761038161032d565b5b80604052505050565b5f610394610304565b90506103a0828261035a565b919050565b5f67ffffffffffffffff8211156103bf576103be61032d565b5b6103c88261031d565b9050602081019050919050565b828183375f83830152505050565b5f6103f56103f0846103a5565b61038b565b90508281526020810184848401111561041157610410610319565b5b61041c8482856103d5565b509392505050565b5f82601f83011261043857610437610315565b5b81356104488482602086016103e3565b91505092915050565b5f819050919050565b61046381610451565b811461046d575f80fd5b50565b5f8135905061047e8161045a565b92915050565b5f805f6060848603121561049b5761049a61030d565b5b5f84013567ffffffffffffffff8111156104b8576104b7610311565b5b6104c486828701610424565b93505060206104d586828701610470565b92505060406104e686828701610470565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561052757808201518184015260208101905061050c565b5f8484015250505050565b5f61053c826104f0565b61054681856104fa565b935061055681856020860161050a565b61055f8161031d565b840191505092915050565b5f6020820190508181035f8301526105828184610532565b905092915050565b5f80604083850312156105a05761059f61030d565b5b5f83013567ffffffffffffffff8111156105bd576105bc610311565b5b6105c985828601610424565b925050602083013567ffffffffffffffff8111156105ea576105e9610311565b5b6105f685828601610424565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61063782610451565b915061064283610451565b925082820390508181111561065a57610659610600565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61069782610451565b91506106a283610451565b92508282019050808211156106ba576106b9610600565b5b9291505056fea2646970667358221220cd3e6c938b80520ad75d863aa9082aa0e6fbae0672d49325d2d6db24522f7bac64736f6c63430008160033",
							"opcodes": "PUSH2 0x6F6 PUSH2 0x4E PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH2 0x42 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1DCD9B55 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xD824CCF3 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 DUP5 SWAP1 POP PUSH0 DUP5 DUP5 PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x188 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x124 JUMPI PUSH2 0x123 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x14D JUMPI PUSH2 0x14C PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x109 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 SWAP1 POP PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 MLOAD DUP4 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FE JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F7 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP7 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x276 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x363 DUP3 PUSH2 0x31D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x32D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x394 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A0 DUP3 DUP3 PUSH2 0x35A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH2 0x3C8 DUP3 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3F5 PUSH2 0x3F0 DUP5 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH2 0x410 PUSH2 0x319 JUMP JUMPDEST JUMPDEST PUSH2 0x41C DUP5 DUP3 DUP6 PUSH2 0x3D5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x315 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x448 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x463 DUP2 PUSH2 0x451 JUMP JUMPDEST DUP2 EQ PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47E DUP2 PUSH2 0x45A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x30D JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B8 JUMPI PUSH2 0x4B7 PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x4C4 DUP7 DUP3 DUP8 ADD PUSH2 0x424 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4D5 DUP7 DUP3 DUP8 ADD PUSH2 0x470 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4E6 DUP7 DUP3 DUP8 ADD PUSH2 0x470 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x527 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x50C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x53C DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x546 DUP2 DUP6 PUSH2 0x4FA JUMP JUMPDEST SWAP4 POP PUSH2 0x556 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x31D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x582 DUP2 DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x30D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BC PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x5C9 DUP6 DUP3 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 DUP6 DUP3 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x637 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH2 0x642 DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x65A JUMPI PUSH2 0x659 PUSH2 0x600 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x697 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A2 DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x600 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATACOPY PUSH13 0x938B80520AD75D863AA9082AA0 0xE6 0xFB 0xAE MOD PUSH19 0xD49325D2D6DB24522F7BAC64736F6C63430008 AND STOP CALLER ",
							"sourceMap": "78:833:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@strcat_2426": {
									"entryPoint": 405,
									"id": 2426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@substring_2481": {
									"entryPoint": 163,
									"id": 2481,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6594:10",
										"nodeType": "YulBlock",
										"src": "0:6594:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1674:82:10",
													"nodeType": "YulBlock",
													"src": "1674:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1697:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1702:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1707:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1707:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1684:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1684:12:10"
																},
																"nativeSrc": "1684:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1684:30:10"
															},
															"nativeSrc": "1684:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1684:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1734:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1739:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1730:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:10"
																		},
																		"nativeSrc": "1730:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1748:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1748:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:10"
																},
																"nativeSrc": "1723:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1723:27:10"
															},
															"nativeSrc": "1723:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1723:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:146:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:10",
														"nodeType": "YulTypedName",
														"src": "1656:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:10",
														"nodeType": "YulTypedName",
														"src": "1661:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:10",
														"nodeType": "YulTypedName",
														"src": "1666:6:10",
														"type": ""
													}
												],
												"src": "1610:146:10"
											},
											{
												"body": {
													"nativeSrc": "1846:341:10",
													"nodeType": "YulBlock",
													"src": "1846:341:10",
													"statements": [
														{
															"nativeSrc": "1856:75:10",
															"nodeType": "YulAssignment",
															"src": "1856:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1923:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1881:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1881:41:10"
																		},
																		"nativeSrc": "1881:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1881:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1865:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1865:15:10"
																},
																"nativeSrc": "1865:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1865:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1856:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1856:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1947:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1947:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1954:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1940:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:10"
																},
																"nativeSrc": "1940:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1940:21:10"
															},
															"nativeSrc": "1940:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1940:21:10"
														},
														{
															"nativeSrc": "1970:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1970:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1985:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1985:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1981:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:10"
																},
																"nativeSrc": "1981:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1981:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1974:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1974:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2035:83:10",
																"nodeType": "YulBlock",
																"src": "2035:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2037:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2037:77:10"
																			},
																			"nativeSrc": "2037:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2037:79:10"
																		},
																		"nativeSrc": "2037:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2037:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2016:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2016:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2021:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2012:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:10"
																		},
																		"nativeSrc": "2012:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2012:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2030:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2030:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2009:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2009:2:10"
																},
																"nativeSrc": "2009:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2009:25:10"
															},
															"nativeSrc": "2006:112:10",
															"nodeType": "YulIf",
															"src": "2006:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2164:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2169:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2174:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2127:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "2127:36:10"
																},
																"nativeSrc": "2127:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2127:54:10"
															},
															"nativeSrc": "2127:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "2127:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1762:425:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1819:3:10",
														"nodeType": "YulTypedName",
														"src": "1819:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1824:6:10",
														"nodeType": "YulTypedName",
														"src": "1824:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1832:3:10",
														"nodeType": "YulTypedName",
														"src": "1832:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1840:5:10",
														"nodeType": "YulTypedName",
														"src": "1840:5:10",
														"type": ""
													}
												],
												"src": "1762:425:10"
											},
											{
												"body": {
													"nativeSrc": "2269:278:10",
													"nodeType": "YulBlock",
													"src": "2269:278:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2318:83:10",
																"nodeType": "YulBlock",
																"src": "2318:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2320:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2320:77:10"
																			},
																			"nativeSrc": "2320:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2320:79:10"
																		},
																		"nativeSrc": "2320:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2320:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2297:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2297:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2305:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2305:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2293:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2293:3:10"
																				},
																				"nativeSrc": "2293:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2293:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2312:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2312:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:10"
																		},
																		"nativeSrc": "2289:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2282:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:10"
																},
																"nativeSrc": "2282:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2282:35:10"
															},
															"nativeSrc": "2279:122:10",
															"nodeType": "YulIf",
															"src": "2279:122:10"
														},
														{
															"nativeSrc": "2410:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2410:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2437:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2437:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2424:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2424:12:10"
																},
																"nativeSrc": "2424:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2424:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2414:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2414:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2453:88:10",
															"nodeType": "YulAssignment",
															"src": "2453:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2514:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2522:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2522:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:10"
																		},
																		"nativeSrc": "2510:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2529:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2529:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2537:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2462:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "2462:47:10"
																},
																"nativeSrc": "2462:79:10",
																"nodeType": "YulFunctionCall",
																"src": "2462:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2453:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2453:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2207:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2247:6:10",
														"nodeType": "YulTypedName",
														"src": "2247:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2255:3:10",
														"nodeType": "YulTypedName",
														"src": "2255:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2263:5:10",
														"nodeType": "YulTypedName",
														"src": "2263:5:10",
														"type": ""
													}
												],
												"src": "2207:340:10"
											},
											{
												"body": {
													"nativeSrc": "2598:32:10",
													"nodeType": "YulBlock",
													"src": "2598:32:10",
													"statements": [
														{
															"nativeSrc": "2608:16:10",
															"nodeType": "YulAssignment",
															"src": "2608:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2619:5:10",
																"nodeType": "YulIdentifier",
																"src": "2619:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2608:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2608:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2553:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2580:5:10",
														"nodeType": "YulTypedName",
														"src": "2580:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2590:7:10",
														"nodeType": "YulTypedName",
														"src": "2590:7:10",
														"type": ""
													}
												],
												"src": "2553:77:10"
											},
											{
												"body": {
													"nativeSrc": "2679:79:10",
													"nodeType": "YulBlock",
													"src": "2679:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2736:16:10",
																"nodeType": "YulBlock",
																"src": "2736:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2745:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2748:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2738:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:10"
																			},
																			"nativeSrc": "2738:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:10"
																		},
																		"nativeSrc": "2738:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2702:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2702:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2727:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2727:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2709:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2709:17:10"
																				},
																				"nativeSrc": "2709:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2709:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2699:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2699:2:10"
																		},
																		"nativeSrc": "2699:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:10"
																},
																"nativeSrc": "2692:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2692:43:10"
															},
															"nativeSrc": "2689:63:10",
															"nodeType": "YulIf",
															"src": "2689:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2636:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2672:5:10",
														"nodeType": "YulTypedName",
														"src": "2672:5:10",
														"type": ""
													}
												],
												"src": "2636:122:10"
											},
											{
												"body": {
													"nativeSrc": "2816:87:10",
													"nodeType": "YulBlock",
													"src": "2816:87:10",
													"statements": [
														{
															"nativeSrc": "2826:29:10",
															"nodeType": "YulAssignment",
															"src": "2826:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2848:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2835:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2835:12:10"
																},
																"nativeSrc": "2835:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2835:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2826:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2826:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2891:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2891:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2864:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2864:26:10"
																},
																"nativeSrc": "2864:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2864:33:10"
															},
															"nativeSrc": "2864:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2864:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2764:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2794:6:10",
														"nodeType": "YulTypedName",
														"src": "2794:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2802:3:10",
														"nodeType": "YulTypedName",
														"src": "2802:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2810:5:10",
														"nodeType": "YulTypedName",
														"src": "2810:5:10",
														"type": ""
													}
												],
												"src": "2764:139:10"
											},
											{
												"body": {
													"nativeSrc": "3019:689:10",
													"nodeType": "YulBlock",
													"src": "3019:689:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3065:83:10",
																"nodeType": "YulBlock",
																"src": "3065:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3067:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3067:77:10"
																			},
																			"nativeSrc": "3067:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3067:79:10"
																		},
																		"nativeSrc": "3067:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3067:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3040:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3040:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3049:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3049:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3036:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:10"
																		},
																		"nativeSrc": "3036:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3036:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3061:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3061:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3032:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3032:3:10"
																},
																"nativeSrc": "3032:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3032:32:10"
															},
															"nativeSrc": "3029:119:10",
															"nodeType": "YulIf",
															"src": "3029:119:10"
														},
														{
															"nativeSrc": "3158:287:10",
															"nodeType": "YulBlock",
															"src": "3158:287:10",
															"statements": [
																{
																	"nativeSrc": "3173:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3173:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3204:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3215:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3215:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3200:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:10"
																				},
																				"nativeSrc": "3200:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3200:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3187:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3187:12:10"
																		},
																		"nativeSrc": "3187:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3177:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3177:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3265:83:10",
																		"nodeType": "YulBlock",
																		"src": "3265:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3267:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3267:77:10"
																					},
																					"nativeSrc": "3267:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3267:79:10"
																				},
																				"nativeSrc": "3267:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3267:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3237:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3237:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3245:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3245:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3234:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3234:2:10"
																		},
																		"nativeSrc": "3234:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:30:10"
																	},
																	"nativeSrc": "3231:117:10",
																	"nodeType": "YulIf",
																	"src": "3231:117:10"
																},
																{
																	"nativeSrc": "3362:73:10",
																	"nodeType": "YulAssignment",
																	"src": "3362:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3407:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3407:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3418:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3418:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3403:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3403:3:10"
																				},
																				"nativeSrc": "3403:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3403:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3427:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3427:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "3372:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "3372:30:10"
																		},
																		"nativeSrc": "3372:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3372:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3362:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3362:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3455:118:10",
															"nodeType": "YulBlock",
															"src": "3455:118:10",
															"statements": [
																{
																	"nativeSrc": "3470:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3470:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3484:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3484:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3500:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3500:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3535:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3535:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3546:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3546:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3531:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3531:3:10"
																				},
																				"nativeSrc": "3531:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3531:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3555:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3555:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3510:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3510:20:10"
																		},
																		"nativeSrc": "3510:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3500:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3500:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3583:118:10",
															"nodeType": "YulBlock",
															"src": "3583:118:10",
															"statements": [
																{
																	"nativeSrc": "3598:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3598:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3612:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3612:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3602:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3602:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3628:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3628:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3663:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3674:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3674:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3659:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:10"
																				},
																				"nativeSrc": "3659:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3659:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3683:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3638:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3638:20:10"
																		},
																		"nativeSrc": "3638:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3638:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3628:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3628:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "2909:799:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2973:9:10",
														"nodeType": "YulTypedName",
														"src": "2973:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2984:7:10",
														"nodeType": "YulTypedName",
														"src": "2984:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2996:6:10",
														"nodeType": "YulTypedName",
														"src": "2996:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3004:6:10",
														"nodeType": "YulTypedName",
														"src": "3004:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3012:6:10",
														"nodeType": "YulTypedName",
														"src": "3012:6:10",
														"type": ""
													}
												],
												"src": "2909:799:10"
											},
											{
												"body": {
													"nativeSrc": "3773:40:10",
													"nodeType": "YulBlock",
													"src": "3773:40:10",
													"statements": [
														{
															"nativeSrc": "3784:22:10",
															"nodeType": "YulAssignment",
															"src": "3784:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3800:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3800:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3794:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3794:5:10"
																},
																"nativeSrc": "3794:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3794:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3784:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3784:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3714:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3756:5:10",
														"nodeType": "YulTypedName",
														"src": "3756:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3766:6:10",
														"nodeType": "YulTypedName",
														"src": "3766:6:10",
														"type": ""
													}
												],
												"src": "3714:99:10"
											},
											{
												"body": {
													"nativeSrc": "3923:73:10",
													"nodeType": "YulBlock",
													"src": "3923:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3940:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3940:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3945:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3945:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3933:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:10"
																},
																"nativeSrc": "3933:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3933:19:10"
															},
															"nativeSrc": "3933:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3933:19:10"
														},
														{
															"nativeSrc": "3961:29:10",
															"nodeType": "YulAssignment",
															"src": "3961:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3980:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3980:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3985:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3985:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3976:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:10"
																},
																"nativeSrc": "3976:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3976:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3961:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3961:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
												"nativeSrc": "3819:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3895:3:10",
														"nodeType": "YulTypedName",
														"src": "3895:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3900:6:10",
														"nodeType": "YulTypedName",
														"src": "3900:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3911:11:10",
														"nodeType": "YulTypedName",
														"src": "3911:11:10",
														"type": ""
													}
												],
												"src": "3819:177:10"
											},
											{
												"body": {
													"nativeSrc": "4064:184:10",
													"nodeType": "YulBlock",
													"src": "4064:184:10",
													"statements": [
														{
															"nativeSrc": "4074:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4074:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4083:1:10",
																"nodeType": "YulLiteral",
																"src": "4083:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4078:1:10",
																	"nodeType": "YulTypedName",
																	"src": "4078:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4143:63:10",
																"nodeType": "YulBlock",
																"src": "4143:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4168:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4168:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4173:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4173:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4164:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4164:3:10"
																					},
																					"nativeSrc": "4164:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4164:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4187:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4187:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4192:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4192:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4183:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4183:3:10"
																							},
																							"nativeSrc": "4183:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4183:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4177:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4177:5:10"
																					},
																					"nativeSrc": "4177:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4177:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4157:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:10"
																			},
																			"nativeSrc": "4157:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4157:39:10"
																		},
																		"nativeSrc": "4157:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4157:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4104:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4104:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4107:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4107:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4101:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4101:2:10"
																},
																"nativeSrc": "4101:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4101:13:10"
															},
															"nativeSrc": "4093:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4115:19:10",
																"nodeType": "YulBlock",
																"src": "4115:19:10",
																"statements": [
																	{
																		"nativeSrc": "4117:15:10",
																		"nodeType": "YulAssignment",
																		"src": "4117:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4126:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "4126:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4129:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4129:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4122:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4122:3:10"
																			},
																			"nativeSrc": "4122:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4122:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4117:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4117:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4097:3:10",
																"nodeType": "YulBlock",
																"src": "4097:3:10",
																"statements": []
															},
															"src": "4093:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4226:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4226:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4231:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4231:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4222:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:10"
																		},
																		"nativeSrc": "4222:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4222:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4240:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4240:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:10"
																},
																"nativeSrc": "4215:27:10",
																"nodeType": "YulFunctionCall",
																"src": "4215:27:10"
															},
															"nativeSrc": "4215:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "4215:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4002:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4046:3:10",
														"nodeType": "YulTypedName",
														"src": "4046:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4051:3:10",
														"nodeType": "YulTypedName",
														"src": "4051:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4056:6:10",
														"nodeType": "YulTypedName",
														"src": "4056:6:10",
														"type": ""
													}
												],
												"src": "4002:246:10"
											},
											{
												"body": {
													"nativeSrc": "4354:293:10",
													"nodeType": "YulBlock",
													"src": "4354:293:10",
													"statements": [
														{
															"nativeSrc": "4364:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4364:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4411:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4411:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4378:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4378:32:10"
																},
																"nativeSrc": "4378:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4378:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4368:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4368:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4426:86:10",
															"nodeType": "YulAssignment",
															"src": "4426:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4500:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4500:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4505:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4505:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
																	"nativeSrc": "4433:66:10",
																	"nodeType": "YulIdentifier",
																	"src": "4433:66:10"
																},
																"nativeSrc": "4433:79:10",
																"nodeType": "YulFunctionCall",
																"src": "4433:79:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4426:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4560:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4560:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4567:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4567:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4556:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:10"
																		},
																		"nativeSrc": "4556:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4556:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4574:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4574:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4579:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4579:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4521:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "4521:34:10"
																},
																"nativeSrc": "4521:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4521:65:10"
															},
															"nativeSrc": "4521:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4521:65:10"
														},
														{
															"nativeSrc": "4595:46:10",
															"nodeType": "YulAssignment",
															"src": "4595:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4606:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4606:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4633:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4611:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "4611:21:10"
																		},
																		"nativeSrc": "4611:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:10"
																},
																"nativeSrc": "4602:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4602:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4595:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
												"nativeSrc": "4254:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4335:5:10",
														"nodeType": "YulTypedName",
														"src": "4335:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4342:3:10",
														"nodeType": "YulTypedName",
														"src": "4342:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4350:3:10",
														"nodeType": "YulTypedName",
														"src": "4350:3:10",
														"type": ""
													}
												],
												"src": "4254:393:10"
											},
											{
												"body": {
													"nativeSrc": "4779:203:10",
													"nodeType": "YulBlock",
													"src": "4779:203:10",
													"statements": [
														{
															"nativeSrc": "4789:26:10",
															"nodeType": "YulAssignment",
															"src": "4789:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4801:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4812:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4797:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:10"
																},
																"nativeSrc": "4797:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4797:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4789:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4789:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4836:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4847:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4832:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nativeSrc": "4832:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4855:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4855:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4851:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:10"
																		},
																		"nativeSrc": "4851:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4851:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4825:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:10"
																},
																"nativeSrc": "4825:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:47:10"
															},
															"nativeSrc": "4825:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4825:47:10"
														},
														{
															"nativeSrc": "4881:94:10",
															"nodeType": "YulAssignment",
															"src": "4881:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4961:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4961:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4970:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4970:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
																	"nativeSrc": "4889:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "4889:71:10"
																},
																"nativeSrc": "4889:86:10",
																"nodeType": "YulFunctionCall",
																"src": "4889:86:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4881:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4881:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
												"nativeSrc": "4653:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4751:9:10",
														"nodeType": "YulTypedName",
														"src": "4751:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4763:6:10",
														"nodeType": "YulTypedName",
														"src": "4763:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4774:4:10",
														"nodeType": "YulTypedName",
														"src": "4774:4:10",
														"type": ""
													}
												],
												"src": "4653:329:10"
											},
											{
												"body": {
													"nativeSrc": "5091:731:10",
													"nodeType": "YulBlock",
													"src": "5091:731:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5137:83:10",
																"nodeType": "YulBlock",
																"src": "5137:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5139:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5139:77:10"
																			},
																			"nativeSrc": "5139:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5139:79:10"
																		},
																		"nativeSrc": "5139:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5139:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5112:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5112:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5121:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5108:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5108:3:10"
																		},
																		"nativeSrc": "5108:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5108:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5133:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5133:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5104:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5104:3:10"
																},
																"nativeSrc": "5104:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5104:32:10"
															},
															"nativeSrc": "5101:119:10",
															"nodeType": "YulIf",
															"src": "5101:119:10"
														},
														{
															"nativeSrc": "5230:287:10",
															"nodeType": "YulBlock",
															"src": "5230:287:10",
															"statements": [
																{
																	"nativeSrc": "5245:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5245:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5276:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5276:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5287:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5287:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5272:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5272:3:10"
																				},
																				"nativeSrc": "5272:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5272:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5259:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "5259:12:10"
																		},
																		"nativeSrc": "5259:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5259:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5249:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5249:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5337:83:10",
																		"nodeType": "YulBlock",
																		"src": "5337:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5339:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "5339:77:10"
																					},
																					"nativeSrc": "5339:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5339:79:10"
																				},
																				"nativeSrc": "5339:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5339:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5309:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5309:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5317:18:10",
																				"nodeType": "YulLiteral",
																				"src": "5317:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5306:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5306:2:10"
																		},
																		"nativeSrc": "5306:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5306:30:10"
																	},
																	"nativeSrc": "5303:117:10",
																	"nodeType": "YulIf",
																	"src": "5303:117:10"
																},
																{
																	"nativeSrc": "5434:73:10",
																	"nodeType": "YulAssignment",
																	"src": "5434:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5479:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5490:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5475:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:10"
																				},
																				"nativeSrc": "5475:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5499:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5444:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:10"
																		},
																		"nativeSrc": "5444:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5434:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5527:288:10",
															"nodeType": "YulBlock",
															"src": "5527:288:10",
															"statements": [
																{
																	"nativeSrc": "5542:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5542:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5573:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5573:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5584:2:10",
																						"nodeType": "YulLiteral",
																						"src": "5584:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5569:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:10"
																				},
																				"nativeSrc": "5569:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5569:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5556:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "5556:12:10"
																		},
																		"nativeSrc": "5556:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5546:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5546:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5635:83:10",
																		"nodeType": "YulBlock",
																		"src": "5635:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5637:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "5637:77:10"
																					},
																					"nativeSrc": "5637:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5637:79:10"
																				},
																				"nativeSrc": "5637:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5637:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5607:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5607:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5615:18:10",
																				"nodeType": "YulLiteral",
																				"src": "5615:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5604:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5604:2:10"
																		},
																		"nativeSrc": "5604:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:30:10"
																	},
																	"nativeSrc": "5601:117:10",
																	"nodeType": "YulIf",
																	"src": "5601:117:10"
																},
																{
																	"nativeSrc": "5732:73:10",
																	"nodeType": "YulAssignment",
																	"src": "5732:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5777:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5777:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5788:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5788:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5773:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5773:3:10"
																				},
																				"nativeSrc": "5773:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5773:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5797:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5797:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5742:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "5742:30:10"
																		},
																		"nativeSrc": "5742:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5732:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5732:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "4988:834:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5053:9:10",
														"nodeType": "YulTypedName",
														"src": "5053:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5064:7:10",
														"nodeType": "YulTypedName",
														"src": "5064:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5076:6:10",
														"nodeType": "YulTypedName",
														"src": "5076:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5084:6:10",
														"nodeType": "YulTypedName",
														"src": "5084:6:10",
														"type": ""
													}
												],
												"src": "4988:834:10"
											},
											{
												"body": {
													"nativeSrc": "5856:152:10",
													"nodeType": "YulBlock",
													"src": "5856:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5873:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5873:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5876:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5876:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5866:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:10"
																},
																"nativeSrc": "5866:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5866:88:10"
															},
															"nativeSrc": "5866:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5866:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5970:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5970:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5973:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5973:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5963:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:10"
																},
																"nativeSrc": "5963:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5963:15:10"
															},
															"nativeSrc": "5963:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5963:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5994:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5994:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5997:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5997:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5987:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5987:6:10"
																},
																"nativeSrc": "5987:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5987:15:10"
															},
															"nativeSrc": "5987:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5987:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5828:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5828:180:10"
											},
											{
												"body": {
													"nativeSrc": "6059:149:10",
													"nodeType": "YulBlock",
													"src": "6059:149:10",
													"statements": [
														{
															"nativeSrc": "6069:25:10",
															"nodeType": "YulAssignment",
															"src": "6069:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6092:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6074:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6074:17:10"
																},
																"nativeSrc": "6074:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6074:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6069:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6069:1:10"
																}
															]
														},
														{
															"nativeSrc": "6103:25:10",
															"nodeType": "YulAssignment",
															"src": "6103:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6126:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6126:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6108:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6108:17:10"
																},
																"nativeSrc": "6108:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6108:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6103:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6103:1:10"
																}
															]
														},
														{
															"nativeSrc": "6137:17:10",
															"nodeType": "YulAssignment",
															"src": "6137:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6149:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6149:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6152:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6152:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6145:3:10"
																},
																"nativeSrc": "6145:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6145:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6137:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6137:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6179:22:10",
																"nodeType": "YulBlock",
																"src": "6179:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6181:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6181:16:10"
																			},
																			"nativeSrc": "6181:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6181:18:10"
																		},
																		"nativeSrc": "6181:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6181:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6170:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6170:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6176:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6176:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6167:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6167:2:10"
																},
																"nativeSrc": "6167:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6167:11:10"
															},
															"nativeSrc": "6164:37:10",
															"nodeType": "YulIf",
															"src": "6164:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6014:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6045:1:10",
														"nodeType": "YulTypedName",
														"src": "6045:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6048:1:10",
														"nodeType": "YulTypedName",
														"src": "6048:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6054:4:10",
														"nodeType": "YulTypedName",
														"src": "6054:4:10",
														"type": ""
													}
												],
												"src": "6014:194:10"
											},
											{
												"body": {
													"nativeSrc": "6242:152:10",
													"nodeType": "YulBlock",
													"src": "6242:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6259:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6259:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6262:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6262:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6252:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6252:6:10"
																},
																"nativeSrc": "6252:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6252:88:10"
															},
															"nativeSrc": "6252:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6252:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6356:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6356:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6359:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6349:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:10"
																},
																"nativeSrc": "6349:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6349:15:10"
															},
															"nativeSrc": "6349:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6349:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6380:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6380:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6383:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6383:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6373:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:10"
																},
																"nativeSrc": "6373:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6373:15:10"
															},
															"nativeSrc": "6373:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6373:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6214:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6214:180:10"
											},
											{
												"body": {
													"nativeSrc": "6444:147:10",
													"nodeType": "YulBlock",
													"src": "6444:147:10",
													"statements": [
														{
															"nativeSrc": "6454:25:10",
															"nodeType": "YulAssignment",
															"src": "6454:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6477:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6459:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:10"
																},
																"nativeSrc": "6459:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6459:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6454:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:10"
																}
															]
														},
														{
															"nativeSrc": "6488:25:10",
															"nodeType": "YulAssignment",
															"src": "6488:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6511:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6511:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6493:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6493:17:10"
																},
																"nativeSrc": "6493:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6493:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6488:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6488:1:10"
																}
															]
														},
														{
															"nativeSrc": "6522:16:10",
															"nodeType": "YulAssignment",
															"src": "6522:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6533:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6533:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6536:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6536:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:10"
																},
																"nativeSrc": "6529:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6529:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6562:22:10",
																"nodeType": "YulBlock",
																"src": "6562:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6564:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6564:16:10"
																			},
																			"nativeSrc": "6564:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6564:18:10"
																		},
																		"nativeSrc": "6564:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6564:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6554:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6554:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6557:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6557:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6551:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6551:2:10"
																},
																"nativeSrc": "6551:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6551:10:10"
															},
															"nativeSrc": "6548:36:10",
															"nodeType": "YulIf",
															"src": "6548:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6400:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6431:1:10",
														"nodeType": "YulTypedName",
														"src": "6431:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6434:1:10",
														"nodeType": "YulTypedName",
														"src": "6434:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6440:3:10",
														"nodeType": "YulTypedName",
														"src": "6440:3:10",
														"type": ""
													}
												],
												"src": "6400:191:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c80631dcd9b5514610043578063d824ccf314610073575b5f80fd5b61005d60048036038101906100589190610484565b6100a3565b60405161006a919061056a565b60405180910390f35b61008d6004803603810190610088919061058a565b610195565b60405161009a919061056a565b60405180910390f35b60605f8490505f84846100b6919061062d565b67ffffffffffffffff8111156100cf576100ce61032d565b5b6040519080825280601f01601f1916602001820160405280156101015781602001600182028036833780820191505090505b5090505f8590505b848110156101885782818151811061012457610123610660565b5b602001015160f81c60f81b82878361013c919061062d565b8151811061014d5761014c610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053508080600101915050610109565b5080925050509392505050565b60605f8390505f8390505f815183516101ae919061068d565b67ffffffffffffffff8111156101c7576101c661032d565b5b6040519080825280601f01601f1916602001820160405280156101f95781602001600182028036833780820191505090505b5090505f5b83518110156102735783818151811061021a57610219610660565b5b602001015160f81c60f81b82828151811061023857610237610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a90535080806001019150506101fe565b505f5b82518110156102f75782818151811061029257610291610660565b5b602001015160f81c60f81b828286516102ab919061068d565b815181106102bc576102bb610660565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053508080600101915050610276565b5080935050505092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103638261031d565b810181811067ffffffffffffffff821117156103825761038161032d565b5b80604052505050565b5f610394610304565b90506103a0828261035a565b919050565b5f67ffffffffffffffff8211156103bf576103be61032d565b5b6103c88261031d565b9050602081019050919050565b828183375f83830152505050565b5f6103f56103f0846103a5565b61038b565b90508281526020810184848401111561041157610410610319565b5b61041c8482856103d5565b509392505050565b5f82601f83011261043857610437610315565b5b81356104488482602086016103e3565b91505092915050565b5f819050919050565b61046381610451565b811461046d575f80fd5b50565b5f8135905061047e8161045a565b92915050565b5f805f6060848603121561049b5761049a61030d565b5b5f84013567ffffffffffffffff8111156104b8576104b7610311565b5b6104c486828701610424565b93505060206104d586828701610470565b92505060406104e686828701610470565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561052757808201518184015260208101905061050c565b5f8484015250505050565b5f61053c826104f0565b61054681856104fa565b935061055681856020860161050a565b61055f8161031d565b840191505092915050565b5f6020820190508181035f8301526105828184610532565b905092915050565b5f80604083850312156105a05761059f61030d565b5b5f83013567ffffffffffffffff8111156105bd576105bc610311565b5b6105c985828601610424565b925050602083013567ffffffffffffffff8111156105ea576105e9610311565b5b6105f685828601610424565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61063782610451565b915061064283610451565b925082820390508181111561065a57610659610600565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61069782610451565b91506106a283610451565b92508282019050808211156106ba576106b9610600565b5b9291505056fea2646970667358221220cd3e6c938b80520ad75d863aa9082aa0e6fbae0672d49325d2d6db24522f7bac64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1DCD9B55 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xD824CCF3 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 DUP5 SWAP1 POP PUSH0 DUP5 DUP5 PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP6 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x188 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x124 JUMPI PUSH2 0x123 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP8 DUP4 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x14D JUMPI PUSH2 0x14C PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x109 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 SWAP1 POP PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 MLOAD DUP4 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FE JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F7 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP7 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x276 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x363 DUP3 PUSH2 0x31D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x32D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x394 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A0 DUP3 DUP3 PUSH2 0x35A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x32D JUMP JUMPDEST JUMPDEST PUSH2 0x3C8 DUP3 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3F5 PUSH2 0x3F0 DUP5 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH2 0x410 PUSH2 0x319 JUMP JUMPDEST JUMPDEST PUSH2 0x41C DUP5 DUP3 DUP6 PUSH2 0x3D5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x315 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x448 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x463 DUP2 PUSH2 0x451 JUMP JUMPDEST DUP2 EQ PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47E DUP2 PUSH2 0x45A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x30D JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B8 JUMPI PUSH2 0x4B7 PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x4C4 DUP7 DUP3 DUP8 ADD PUSH2 0x424 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4D5 DUP7 DUP3 DUP8 ADD PUSH2 0x470 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4E6 DUP7 DUP3 DUP8 ADD PUSH2 0x470 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x527 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x50C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x53C DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x546 DUP2 DUP6 PUSH2 0x4FA JUMP JUMPDEST SWAP4 POP PUSH2 0x556 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x31D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x582 DUP2 DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x30D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BC PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x5C9 DUP6 DUP3 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x311 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 DUP6 DUP3 DUP7 ADD PUSH2 0x424 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x637 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH2 0x642 DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x65A JUMPI PUSH2 0x659 PUSH2 0x600 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x697 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A2 DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x600 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATACOPY PUSH13 0x938B80520AD75D863AA9082AA0 0xE6 0xFB 0xAE MOD PUSH19 0xD49325D2D6DB24522F7BAC64736F6C63430008 AND STOP CALLER ",
							"sourceMap": "78:833:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;106:446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:350;644:13;669:21;699:3;669:34;;714:19;755:8;746:6;:17;;;;:::i;:::-;736:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:50;;779:6;786:8;779:15;;775:94;798:6;796:1;:8;775:94;;;846:8;855:1;846:11;;;;;;;;:::i;:::-;;;;;;;;;;825:6;834:8;832:1;:10;;;;:::i;:::-;825:18;;;;;;;;:::i;:::-;;;;;:32;;;;;;;;;;;806:3;;;;;;;775:94;;;;893:6;879:21;;;;558:350;;;;;:::o;106:446::-;182:13;208:15;232:4;208:29;;248:15;272:4;248:29;;288:16;329:2;:9;317:2;:9;:21;;;;:::i;:::-;307:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:51;;354:6;350:72;366:2;:9;364:1;:11;350:72;;;405:2;408:1;405:5;;;;;;;;:::i;:::-;;;;;;;;;;396:3;400:1;396:6;;;;;;;;:::i;:::-;;;;;:14;;;;;;;;;;;377:3;;;;;;;350:72;;;;436:6;432:84;448:2;:9;446:1;:11;432:84;;;499:2;502:1;499:5;;;;;;;;:::i;:::-;;;;;;;;;;478:3;494:1;482:2;:9;:13;;;;:::i;:::-;478:18;;;;;;;;:::i;:::-;;;;;:26;;;;;;;;;;;459:3;;;;;;;432:84;;;;540:3;526:18;;;;;106:446;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:77::-;2590:7;2619:5;2608:16;;2553:77;;;:::o;2636:122::-;2709:24;2727:5;2709:24;:::i;:::-;2702:5;2699:35;2689:63;;2748:1;2745;2738:12;2689:63;2636:122;:::o;2764:139::-;2810:5;2848:6;2835:20;2826:29;;2864:33;2891:5;2864:33;:::i;:::-;2764:139;;;;:::o;2909:799::-;2996:6;3004;3012;3061:2;3049:9;3040:7;3036:23;3032:32;3029:119;;;3067:79;;:::i;:::-;3029:119;3215:1;3204:9;3200:17;3187:31;3245:18;3237:6;3234:30;3231:117;;;3267:79;;:::i;:::-;3231:117;3372:63;3427:7;3418:6;3407:9;3403:22;3372:63;:::i;:::-;3362:73;;3158:287;3484:2;3510:53;3555:7;3546:6;3535:9;3531:22;3510:53;:::i;:::-;3500:63;;3455:118;3612:2;3638:53;3683:7;3674:6;3663:9;3659:22;3638:53;:::i;:::-;3628:63;;3583:118;2909:799;;;;;:::o;3714:99::-;3766:6;3800:5;3794:12;3784:22;;3714:99;;;:::o;3819:177::-;3911:11;3945:6;3940:3;3933:19;3985:4;3980:3;3976:14;3961:29;;3819:177;;;;:::o;4002:246::-;4083:1;4093:113;4107:6;4104:1;4101:13;4093:113;;;4192:1;4187:3;4183:11;4177:18;4173:1;4168:3;4164:11;4157:39;4129:2;4126:1;4122:10;4117:15;;4093:113;;;4240:1;4231:6;4226:3;4222:16;4215:27;4064:184;4002:246;;;:::o;4254:393::-;4350:3;4378:39;4411:5;4378:39;:::i;:::-;4433:79;4505:6;4500:3;4433:79;:::i;:::-;4426:86;;4521:65;4579:6;4574:3;4567:4;4560:5;4556:16;4521:65;:::i;:::-;4611:29;4633:6;4611:29;:::i;:::-;4606:3;4602:39;4595:46;;4354:293;4254:393;;;;:::o;4653:329::-;4774:4;4812:2;4801:9;4797:18;4789:26;;4861:9;4855:4;4851:20;4847:1;4836:9;4832:17;4825:47;4889:86;4970:4;4961:6;4889:86;:::i;:::-;4881:94;;4653:329;;;;:::o;4988:834::-;5076:6;5084;5133:2;5121:9;5112:7;5108:23;5104:32;5101:119;;;5139:79;;:::i;:::-;5101:119;5287:1;5276:9;5272:17;5259:31;5317:18;5309:6;5306:30;5303:117;;;5339:79;;:::i;:::-;5303:117;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5230:287;5584:2;5573:9;5569:18;5556:32;5615:18;5607:6;5604:30;5601:117;;;5637:79;;:::i;:::-;5601:117;5742:63;5797:7;5788:6;5777:9;5773:22;5742:63;:::i;:::-;5732:73;;5527:288;4988:834;;;;;:::o;5828:180::-;5876:77;5873:1;5866:88;5973:4;5970:1;5963:15;5997:4;5994:1;5987:15;6014:194;6054:4;6074:20;6092:1;6074:20;:::i;:::-;6069:25;;6108:20;6126:1;6108:20;:::i;:::-;6103:25;;6152:1;6149;6145:9;6137:17;;6176:1;6170:4;6167:11;6164:37;;;6181:18;;:::i;:::-;6164:37;6014:194;;;;:::o;6214:180::-;6262:77;6259:1;6252:88;6359:4;6356:1;6349:15;6383:4;6380:1;6373:15;6400:191;6440:3;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6493:20;6511:1;6493:20;:::i;:::-;6488:25;;6536:1;6533;6529:9;6522:16;;6557:3;6554:1;6551:10;6548:36;;;6564:18;;:::i;:::-;6548:36;6400:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "356400",
								"executionCost": "419",
								"totalCost": "356819"
							},
							"external": {
								"strcat(string,string)": "infinite",
								"substring(string,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 78,
									"end": 911,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd3e6c938b80520ad75d863aa9082aa0e6fbae0672d49325d2d6db24522f7bac64736f6c63430008160033",
									".code": [
										{
											"begin": 78,
											"end": 911,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "1DCD9B55"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "D824CCF3"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 78,
											"end": 911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 558,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 558,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 106,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 106,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 106,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 644,
											"end": 657,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 669,
											"end": 690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 702,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 669,
											"end": 703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 669,
											"end": 703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 763,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 746,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 746,
											"end": 763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 746,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 746,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 746,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 746,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 746,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 736,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 736,
											"end": 764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 714,
											"end": 764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 794,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 779,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 775,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 798,
											"end": 804,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 796,
											"end": 797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 804,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 775,
											"end": 869,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 846,
											"end": 854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 855,
											"end": 856,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 846,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 846,
											"end": 857,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 834,
											"end": 842,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 832,
											"end": 833,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 832,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 832,
											"end": 842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 832,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 832,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 832,
											"end": 842,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 825,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 857,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 857,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 825,
											"end": 857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 775,
											"end": 869,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 775,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 775,
											"end": 869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 879,
											"end": 900,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 879,
											"end": 900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 879,
											"end": 900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 879,
											"end": 900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 558,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 106,
											"end": 552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 182,
											"end": 195,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 208,
											"end": 223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 236,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 208,
											"end": 237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 208,
											"end": 237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 248,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 276,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 248,
											"end": 277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 248,
											"end": 277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 288,
											"end": 304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 329,
											"end": 338,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 317,
											"end": 319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 317,
											"end": 326,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 317,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 317,
											"end": 338,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 288,
											"end": 339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 288,
											"end": 339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 354,
											"end": 360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 366,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 366,
											"end": 375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 364,
											"end": 375,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 350,
											"end": 422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 350,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 350,
											"end": 422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 407,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 408,
											"end": 409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 405,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 396,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 396,
											"end": 402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 396,
											"end": 410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 377,
											"end": 380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 350,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 422,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 350,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 350,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 432,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 448,
											"end": 457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 446,
											"end": 457,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 432,
											"end": 516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 432,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 432,
											"end": 516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 499,
											"end": 501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 502,
											"end": 503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 499,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 499,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 499,
											"end": 504,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 478,
											"end": 481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 482,
											"end": 484,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 482,
											"end": 491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 482,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 478,
											"end": 496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 504,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 504,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 478,
											"end": 504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 432,
											"end": 516,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 432,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 432,
											"end": 516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 543,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1714,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1881,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1865,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2019,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2009,
											"end": 2034,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2037,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2127,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 2187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2316,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2320,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2462,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2709,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2734,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2855,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2864,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3049,
											"end": 3058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3047,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3067,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3218,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3267,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3372,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3435,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3555,
											"end": 3562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3510,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3563,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3614,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3638,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3813,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3714,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 3990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4248,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4002,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4114,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4157,
											"end": 4196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4093,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4229,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4215,
											"end": 4242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4411,
											"end": 4416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4378,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4378,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4503,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 4433,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4512,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4433,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4512,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4565,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4521,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4586,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4521,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4611,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4611,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4609,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4641,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4354,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4797,
											"end": 4815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4789,
											"end": 4815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4789,
											"end": 4815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4889,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4975,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 4889,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5119,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5139,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5290,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5339,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5339,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5418,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5339,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5444,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5556,
											"end": 5588,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5634,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5718,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 5601,
											"end": 5718,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5637,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5718,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 5601,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5797,
											"end": 5804,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5786,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5742,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5805,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5742,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5805,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5828,
											"end": 6008,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5828,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5876,
											"end": 5953,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5963,
											"end": 5978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5994,
											"end": 5995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6002,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6074,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6094,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6074,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6108,
											"end": 6128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6128,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 6108,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6128,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6154,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6170,
											"end": 6174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6178,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6201,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6164,
											"end": 6201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 6181,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6201,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6164,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6394,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6214,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6339,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6349,
											"end": 6364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6387,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6493,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6561,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 6564,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyERC20.sol",
								"contracts/utils/MyStringUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"strcat(string,string)": "d824ccf3",
							"substring(string,uint256,uint256)": "1dcd9b55"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"str2\",\"type\":\"string\"}],\"name\":\"strcat\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startInd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endInd\",\"type\":\"uint256\"}],\"name\":\"substring\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/MyStringUtils.sol\":\"MyStringUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/MyStringUtils.sol\":{\"keccak256\":\"0xd1b89563976afd5808c3353ee21f50c99479262b3e5eef7554fb3779703f5b37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768f4bd7f66d4ab07e393b29b5d132fa5f4f92af44a73baf663fe04768d4914f\",\"dweb:/ipfs/QmREBNkQWueEFZ5SypAk8y9wD6F9omB4fEvmaPYogHntxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2094
						],
						"SignedMath": [
							2199
						],
						"Strings": [
							1040
						]
					},
					"id": 1041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 2095,
							"src": "127:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2094,
										"src": "135:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 2200,
							"src": "165:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 790,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2199,
										"src": "173:10:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1040,
							"linearizedBaseContracts": [
								1040
							],
							"name": "Strings",
							"nameLocation": "259:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 795,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "273:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 793,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "335:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 796,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:5",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 805,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "520:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:5"
									},
									"src": "470:66:5"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "708:627:5",
										"statements": [
											{
												"id": 851,
												"nodeType": "UncheckedBlock",
												"src": "718:611:5",
												"statements": [
													{
														"assignments": [
															814
														],
														"declarations": [
															{
																"constant": false,
																"id": 814,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "742:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 813,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 821,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "770:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 815,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "759:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2094_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1914,
																	"src": "759:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:5"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "794:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 822,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 828,
														"initialValue": {
															"arguments": [
																{
																	"id": 826,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "828:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 824,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:5"
													},
													{
														"assignments": [
															830
														],
														"declarations": [
															{
																"constant": false,
																"id": 830,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "849:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 831,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:5"
													},
													{
														"AST": {
															"nativeSrc": "930:67:5",
															"nodeType": "YulBlock",
															"src": "930:67:5",
															"statements": [
																{
																	"nativeSrc": "948:35:5",
																	"nodeType": "YulAssignment",
																	"src": "948:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:5",
																						"nodeType": "YulLiteral",
																						"src": "971:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:5"
																				},
																				"nativeSrc": "967:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:5"
																		},
																		"nativeSrc": "955:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:5",
																"valueSize": 1
															},
															{
																"declaration": 814,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:5",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:5",
																"valueSize": 1
															}
														],
														"id": 832,
														"nodeType": "InlineAssembly",
														"src": "921:76:5"
													},
													{
														"body": {
															"id": 847,
															"nodeType": "Block",
															"src": "1023:269:5",
															"statements": [
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:5",
																		"subExpression": {
																			"id": 834,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "1041:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:5",
																		"nodeType": "YulBlock",
																		"src": "1124:86:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:5",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:5"
																									},
																									"nativeSrc": "1164:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:5"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:5"
																							},
																							"nativeSrc": "1159:32:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:5"
																					},
																					"nativeSrc": "1146:46:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:5"
																				},
																				"nativeSrc": "1146:46:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 795,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 830,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 808,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 837,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:5"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1227:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1260:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 846,
																	"nodeType": "IfStatement",
																	"src": "1256:21:5",
																	"trueBody": {
																		"id": 845,
																		"nodeType": "Break",
																		"src": "1272:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 848,
														"nodeType": "WhileStatement",
														"src": "1010:282:5"
													},
													{
														"expression": {
															"id": 849,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "1312:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 812,
														"id": 850,
														"nodeType": "Return",
														"src": "1305:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:5"
									},
									"scope": 1040,
									"src": "637:698:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1511:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "1542:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:5",
															"trueExpression": {
																"hexValue": "2d",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1588:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 871,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "1573:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2199_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:5",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2198,
																		"src": "1573:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 870,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1564:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 861,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:5",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 860,
												"id": 877,
												"nodeType": "Return",
												"src": "1521:75:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1459:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 855,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1496:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:5"
									},
									"scope": 1040,
									"src": "1435:168:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1782:100:5",
										"statements": [
											{
												"id": 897,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "1835:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 891,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "1854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 889,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2094,
																				"src": "1842:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2094_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2036,
																			"src": "1842:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 887,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	899,
																	982,
																	1002
																],
																"referencedDeclaration": 982,
																"src": "1823:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 886,
														"id": 896,
														"nodeType": "Return",
														"src": "1816:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1729:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1767:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:5"
									},
									"scope": 1040,
									"src": "1708:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2095:435:5",
										"statements": [
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "2105:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"id": 911,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 902,
													"src": "2126:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:5"
											},
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "2141:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 913,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 918,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "2177:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 915,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:5"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 924,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2198:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 926,
														"indexExpression": {
															"hexValue": "30",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:5"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 930,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2223:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 932,
														"indexExpression": {
															"hexValue": "31",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:5"
											},
											{
												"body": {
													"id": 964,
													"nodeType": "Block",
													"src": "2293:95:5",
													"statements": [
														{
															"expression": {
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 950,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "2307:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 952,
																	"indexExpression": {
																		"id": 951,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "2314:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 953,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "2319:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 957,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 954,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "2330:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:5"
														},
														{
															"expression": {
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 960,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2361:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 944,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2281:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"initializationExpression": {
													"assignments": [
														937
													],
													"declarations": [
														{
															"constant": false,
															"id": 937,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 965,
															"src": "2253:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 936,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 943,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 939,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "2269:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:5",
														"subExpression": {
															"id": 947,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2290:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 949,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2401:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "2397:96:5",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "2418:75:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "2468:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 971,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "2475:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 969,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "2439:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "2432:50:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2516:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 976,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 980,
												"nodeType": "Return",
												"src": "2502:21:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2026:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2041:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:5"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2080:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:5"
									},
									"scope": 1040,
									"src": "2005:525:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "2762:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 995,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "2807:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 993,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 998,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2815:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 990,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															899,
															982,
															1002
														],
														"referencedDeclaration": 982,
														"src": "2779:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 989,
												"id": 1000,
												"nodeType": "Return",
												"src": "2772:58:5"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "2710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:5"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "2747:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:5"
									},
									"scope": 1040,
									"src": "2689:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2992:104:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1014,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "3015:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1012,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "3034:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1026,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "3063:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1024,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1023,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "3086:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1029,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1037,
												"nodeType": "Return",
												"src": "3002:87:5"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2929:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2946:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:5"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2986:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:5"
									},
									"scope": 1040,
									"src": "2914:182:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1041,
							"src": "251:2847:5",
							"usedErrors": [
								805
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2094
						]
					},
					"id": 2095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1042,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1043,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2094,
							"linearizedBaseContracts": [
								2094
							],
							"name": "Math",
							"nameLocation": "211:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:6",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1046,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:6"
									},
									"src": "277:29:6"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1051,
									"members": [
										{
											"id": 1047,
											"name": "Floor",
											"nameLocation": "336:5:6",
											"nodeType": "EnumValue",
											"src": "336:5:6"
										},
										{
											"id": 1048,
											"name": "Ceil",
											"nameLocation": "379:4:6",
											"nodeType": "EnumValue",
											"src": "379:4:6"
										},
										{
											"id": 1049,
											"name": "Trunc",
											"nameLocation": "421:5:6",
											"nodeType": "EnumValue",
											"src": "421:5:6"
										},
										{
											"id": 1050,
											"name": "Expand",
											"nameLocation": "451:6:6",
											"nodeType": "EnumValue",
											"src": "451:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:6",
									"nodeType": "EnumDefinition",
									"src": "312:169:6"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "661:140:6",
										"statements": [
											{
												"id": 1081,
												"nodeType": "UncheckedBlock",
												"src": "671:124:6",
												"statements": [
													{
														"assignments": [
															1064
														],
														"declarations": [
															{
																"constant": false,
																"id": 1064,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1081,
																"src": "695:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1063,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "707:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1066,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "711:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1076,
														"nodeType": "IfStatement",
														"src": "726:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1062,
															"id": 1075,
															"nodeType": "Return",
															"src": "737:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1078,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1079,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1062,
														"id": 1080,
														"nodeType": "Return",
														"src": "768:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "646:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:6"
									},
									"scope": 2094,
									"src": "585:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "984:113:6",
										"statements": [
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "994:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1022:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1096,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1026:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1102,
														"nodeType": "IfStatement",
														"src": "1018:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1094,
															"id": 1101,
															"nodeType": "Return",
															"src": "1029:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1104,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "1074:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1105,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1107,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1094,
														"id": 1108,
														"nodeType": "Return",
														"src": "1060:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "924:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:6"
									},
									"scope": 2094,
									"src": "908:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1283:417:6",
										"statements": [
											{
												"id": 1151,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1551:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "1547:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1122,
															"id": 1129,
															"nodeType": "Return",
															"src": "1559:16:6"
														}
													},
													{
														"assignments": [
															1132
														],
														"declarations": [
															{
																"constant": false,
																"id": 1132,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1151,
																"src": "1589:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1136,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1134,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "1624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1138,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "1628:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "1620:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1122,
															"id": 1145,
															"nodeType": "Return",
															"src": "1636:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1148,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "1681:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1149,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1122,
														"id": 1150,
														"nodeType": "Return",
														"src": "1667:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:6"
									},
									"scope": 2094,
									"src": "1207:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "1887:114:6",
										"statements": [
											{
												"id": 1179,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "1925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1172,
														"nodeType": "IfStatement",
														"src": "1921:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1170,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1164,
															"id": 1171,
															"nodeType": "Return",
															"src": "1933:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1174,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "1978:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1175,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "1982:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1164,
														"id": 1178,
														"nodeType": "Return",
														"src": "1964:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1827:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1872:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1878:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:6"
									},
									"scope": 2094,
									"src": "1811:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "2198:114:6",
										"statements": [
											{
												"id": 1207,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2236:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1200,
														"nodeType": "IfStatement",
														"src": "2232:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1192,
															"id": 1199,
															"nodeType": "Return",
															"src": "2244:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1202,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "2289:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1203,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "2293:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1205,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1192,
														"id": 1206,
														"nodeType": "Return",
														"src": "2275:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:6"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:6"
									},
									"scope": 2094,
									"src": "2122:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "2449:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2466:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1220,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "2478:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:6",
													"trueExpression": {
														"id": 1222,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2474:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1225,
												"nodeType": "Return",
												"src": "2459:20:6"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:6"
									},
									"scope": 2094,
									"src": "2382:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2624:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1237,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1238,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2645:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "2653:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:6",
													"trueExpression": {
														"id": 1240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "2649:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1243,
												"nodeType": "Return",
												"src": "2634:20:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2570:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2581:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2615:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:6"
									},
									"scope": 2094,
									"src": "2557:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2845:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "2900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1256,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "2904:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "2910:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1260,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "2914:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1254,
												"id": 1266,
												"nodeType": "Return",
												"src": "2892:28:6"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2802:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2836:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:6"
									},
									"scope": 2094,
									"src": "2774:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "3219:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "3233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "3229:127:6",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "3241:115:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1281,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "3340:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1282,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3344:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1277,
															"id": 1284,
															"nodeType": "Return",
															"src": "3333:12:6"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "3444:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1291,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "3458:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1300,
												"nodeType": "Return",
												"src": "3437:35:6"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3165:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3176:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3210:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:6"
									},
									"scope": 2094,
									"src": "3148:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "3901:4018:6",
										"statements": [
											{
												"id": 1426,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:6",
												"statements": [
													{
														"assignments": [
															1315
														],
														"declarations": [
															{
																"constant": false,
																"id": 1315,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "4232:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1319,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1316,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "4248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1317,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "4252:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:6"
													},
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "4312:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1322,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:6"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:6",
															"nodeType": "YulBlock",
															"src": "4392:122:6",
															"statements": [
																{
																	"nativeSrc": "4410:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:6"
																				},
																				"nativeSrc": "4433:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		},
																		"nativeSrc": "4420:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:6",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:6",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:6"
																				},
																				"nativeSrc": "4486:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1305,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1307,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:6",
																"valueSize": 1
															}
														],
														"id": 1323,
														"nodeType": "InlineAssembly",
														"src": "4383:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "4591:368:6",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "4607:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1327,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "4925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1328,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "4933:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1313,
																	"id": 1330,
																	"nodeType": "Return",
																	"src": "4918:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "5065:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1334,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1340,
														"nodeType": "IfStatement",
														"src": "5061:88:6",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "5087:62:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1336,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "5112:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1338,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:6"
																}
															]
														}
													},
													{
														"assignments": [
															1342
														],
														"declarations": [
															{
																"constant": false,
																"id": 1342,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "5404:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1343,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:6"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:6",
															"nodeType": "YulBlock",
															"src": "5444:291:6",
															"statements": [
																{
																	"nativeSrc": "5513:38:6",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:6"
																		},
																		"nativeSrc": "5526:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:6",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:6"
																				},
																				"nativeSrc": "5653:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:6"
																		},
																		"nativeSrc": "5642:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:6",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:6"
																		},
																		"nativeSrc": "5700:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1305,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1307,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:6",
																"valueSize": 1
															}
														],
														"id": 1344,
														"nodeType": "InlineAssembly",
														"src": "5435:300:6"
													},
													{
														"assignments": [
															1346
														],
														"declarations": [
															{
																"constant": false,
																"id": 1346,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "5939:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "5954:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1349,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "5973:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:6"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:6",
															"nodeType": "YulBlock",
															"src": "6008:362:6",
															"statements": [
																{
																	"nativeSrc": "6073:37:6",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:6"
																		},
																		"nativeSrc": "6088:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:6",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:6"
																		},
																		"nativeSrc": "6186:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:6",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:6"
																						},
																						"nativeSrc": "6333:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:6"
																				},
																				"nativeSrc": "6329:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:6"
																		},
																		"nativeSrc": "6325:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:6",
																"valueSize": 1
															}
														],
														"id": 1354,
														"nodeType": "InlineAssembly",
														"src": "5999:371:6"
													},
													{
														"expression": {
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1355,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "6436:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "6445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1357,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "6453:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:6"
													},
													{
														"assignments": [
															1362
														],
														"declarations": [
															{
																"constant": false,
																"id": 1362,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "6775:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1369,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1364,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "6798:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:6"
													},
													{
														"expression": {
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1370,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1372,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7046:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1373,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1377,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:6"
													},
													{
														"expression": {
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1378,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7100:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1380,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7115:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1381,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1385,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:6"
													},
													{
														"expression": {
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1386,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1388,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1389,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1393,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:6"
													},
													{
														"expression": {
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1394,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1396,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7255:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1397,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7269:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1401,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:6"
													},
													{
														"expression": {
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1402,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7310:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1404,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7325:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1405,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7339:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1409,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:6"
													},
													{
														"expression": {
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1410,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7381:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1412,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7396:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1413,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7410:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1417,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:6"
													},
													{
														"expression": {
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "7851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "7860:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1420,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "7868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1423,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:6"
													},
													{
														"expression": {
															"id": 1424,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "7896:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1313,
														"id": 1425,
														"nodeType": "Return",
														"src": "7889:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:6"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3885:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:6"
									},
									"scope": 2094,
									"src": "3803:4116:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "8161:192:6",
										"statements": [
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "8171:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"id": 1446,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "8195:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1447,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "8198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1448,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "8201:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1428,
															1471
														],
														"referencedDeclaration": 1428,
														"src": "8188:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1452,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "8244:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1051",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1051",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1451,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "8227:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1455,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "8264:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1456,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "8267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1457,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "8270:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1454,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "8223:101:6",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "8288:36:6",
													"statements": [
														{
															"expression": {
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1462,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "8302:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1465,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1468,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1444,
													"src": "8340:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1469,
												"nodeType": "Return",
												"src": "8333:13:6"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8067:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8078:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8089:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8110:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "8110:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "8110:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:6"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8152:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:6"
									},
									"scope": 2094,
									"src": "8051:302:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "8644:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "8658:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "8654:45:6",
												"trueBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "8666:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1478,
															"id": 1483,
															"nodeType": "Return",
															"src": "8680:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "9378:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1490,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "9406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1489,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1750,
																			1785
																		],
																		"referencedDeclaration": 1750,
																		"src": "9401:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1494,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:6"
											},
											{
												"id": 1581,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:6",
												"statements": [
													{
														"expression": {
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1497,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9839:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1498,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9849:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1499,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9858:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1500,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9862:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1503,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1507,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:6"
													},
													{
														"expression": {
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1508,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9888:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1509,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9898:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1510,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1511,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9911:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1514,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1518,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:6"
													},
													{
														"expression": {
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1519,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1520,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9947:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1521,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9956:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1522,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1525,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1529,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:6"
													},
													{
														"expression": {
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9986:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1531,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9996:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1532,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10005:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1533,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10009:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1536,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1540,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:6"
													},
													{
														"expression": {
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10035:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1542,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10045:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1543,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10054:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1544,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10058:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1547,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1551,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:6"
													},
													{
														"expression": {
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10084:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1553,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10094:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1554,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10103:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1555,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10107:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1562,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:6"
													},
													{
														"expression": {
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10133:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1564,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10143:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1565,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10152:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1566,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10156:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1569,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1573,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "10193:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1576,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "10201:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1577,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "10205:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1574,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "10189:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1478,
														"id": 1580,
														"nodeType": "Return",
														"src": "10182:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "8601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:6"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "8635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:6"
									},
									"scope": 2094,
									"src": "8587:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "10405:164:6",
										"statements": [
											{
												"id": 1616,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:6",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1616,
																"src": "10439:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1599,
														"initialValue": {
															"arguments": [
																{
																	"id": 1597,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "10461:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1596,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1583,
																	1618
																],
																"referencedDeclaration": 1583,
																"src": "10456:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "10484:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1602,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1589,
																						"src": "10511:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1601,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "10494:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1604,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "10524:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1605,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "10533:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1607,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "10542:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1613,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1615,
														"nodeType": "Return",
														"src": "10477:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10354:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "10354:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "10354:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:6"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:6"
									},
									"scope": 2094,
									"src": "10329:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "10760:922:6",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1749,
														"src": "10770:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1629,
												"initialValue": {
													"hexValue": "30",
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:6"
											},
											{
												"id": 1746,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "10826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1644,
														"nodeType": "IfStatement",
														"src": "10822:99:6",
														"trueBody": {
															"id": 1643,
															"nodeType": "Block",
															"src": "10844:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "10862:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1638,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:6"
																},
																{
																	"expression": {
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1639,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "10893:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1642,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "10938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "10934:96:6",
														"trueBody": {
															"id": 1658,
															"nodeType": "Block",
															"src": "10955:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "10973:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1653,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:6"
																},
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11047:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1674,
														"nodeType": "IfStatement",
														"src": "11043:96:6",
														"trueBody": {
															"id": 1673,
															"nodeType": "Block",
															"src": "11064:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11082:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1668,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:6"
																},
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11112:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11156:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1689,
														"nodeType": "IfStatement",
														"src": "11152:96:6",
														"trueBody": {
															"id": 1688,
															"nodeType": "Block",
															"src": "11173:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11191:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1683,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:6"
																},
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11221:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11265:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "11261:93:6",
														"trueBody": {
															"id": 1703,
															"nodeType": "Block",
															"src": "11281:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11299:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1698,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:6"
																},
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11328:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11371:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1719,
														"nodeType": "IfStatement",
														"src": "11367:93:6",
														"trueBody": {
															"id": 1718,
															"nodeType": "Block",
															"src": "11387:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11405:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1713,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:6"
																},
																{
																	"expression": {
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11434:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1717,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11477:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1734,
														"nodeType": "IfStatement",
														"src": "11473:93:6",
														"trueBody": {
															"id": 1733,
															"nodeType": "Block",
															"src": "11493:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1728,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:6"
																},
																{
																	"expression": {
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11540:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1732,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11583:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1745,
														"nodeType": "IfStatement",
														"src": "11579:64:6",
														"trueBody": {
															"id": 1744,
															"nodeType": "Block",
															"src": "11599:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11617:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1743,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1747,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "11669:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1748,
												"nodeType": "Return",
												"src": "11662:13:6"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "10713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:6"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "10751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:6"
									},
									"scope": 2094,
									"src": "10699:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "11915:168:6",
										"statements": [
											{
												"id": 1783,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:6",
												"statements": [
													{
														"assignments": [
															1762
														],
														"declarations": [
															{
																"constant": false,
																"id": 1762,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1783,
																"src": "11949:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1766,
														"initialValue": {
															"arguments": [
																{
																	"id": 1764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "11971:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1763,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1750,
																	1785
																],
																"referencedDeclaration": 1750,
																"src": "11966:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "11998:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1769,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "12025:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1768,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "12008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1772,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1762,
																						"src": "12043:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1774,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "12052:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1760,
														"id": 1782,
														"nodeType": "Return",
														"src": "11991:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11864:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1755,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1754,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "11864:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "11864:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:6"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11906:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:6"
									},
									"scope": 2094,
									"src": "11835:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "12276:854:6",
										"statements": [
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1913,
														"src": "12286:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"hexValue": "30",
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:6"
											},
											{
												"id": 1910,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1797,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12342:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "12338:103:6",
														"trueBody": {
															"id": 1812,
															"nodeType": "Block",
															"src": "12361:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12379:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1807,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:6"
																},
																{
																	"expression": {
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1808,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12414:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1811,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1830,
														"nodeType": "IfStatement",
														"src": "12454:103:6",
														"trueBody": {
															"id": 1829,
															"nodeType": "Block",
															"src": "12477:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1819,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12495:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1824,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:6"
																},
																{
																	"expression": {
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12530:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1828,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12574:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1847,
														"nodeType": "IfStatement",
														"src": "12570:103:6",
														"trueBody": {
															"id": 1846,
															"nodeType": "Block",
															"src": "12593:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1841,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:6"
																},
																{
																	"expression": {
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12646:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1845,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12690:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1864,
														"nodeType": "IfStatement",
														"src": "12686:100:6",
														"trueBody": {
															"id": 1863,
															"nodeType": "Block",
															"src": "12708:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12726:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1858,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:6"
																},
																{
																	"expression": {
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12760:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12803:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1881,
														"nodeType": "IfStatement",
														"src": "12799:100:6",
														"trueBody": {
															"id": 1880,
															"nodeType": "Block",
															"src": "12821:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12839:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:6"
																},
																{
																	"expression": {
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12873:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1879,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12916:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "12912:100:6",
														"trueBody": {
															"id": 1897,
															"nodeType": "Block",
															"src": "12934:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12952:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:6"
																},
																{
																	"expression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12986:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "13029:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "13025:66:6",
														"trueBody": {
															"id": 1908,
															"nodeType": "Block",
															"src": "13047:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "13065:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1911,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1794,
													"src": "13117:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1912,
												"nodeType": "Return",
												"src": "13110:13:6"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "12229:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:6"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "12267:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:6"
									},
									"scope": 2094,
									"src": "12214:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "13365:170:6",
										"statements": [
											{
												"id": 1947,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:6",
												"statements": [
													{
														"assignments": [
															1926
														],
														"declarations": [
															{
																"constant": false,
																"id": 1926,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1947,
																"src": "13399:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1930,
														"initialValue": {
															"arguments": [
																{
																	"id": 1928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "13422:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1927,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1914,
																	1949
																],
																"referencedDeclaration": 1914,
																"src": "13416:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "13449:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1933,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1920,
																						"src": "13476:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1932,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "13459:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1936,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1926,
																						"src": "13495:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1938,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1917,
																					"src": "13504:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1924,
														"id": 1946,
														"nodeType": "Return",
														"src": "13442:76:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1918,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "13314:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "13314:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:6"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:6"
									},
									"scope": 2094,
									"src": "13284:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "13855:600:6",
										"statements": [
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "13865:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"hexValue": "30",
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:6"
											},
											{
												"id": 2032,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "13921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1975,
														"nodeType": "IfStatement",
														"src": "13917:98:6",
														"trueBody": {
															"id": 1974,
															"nodeType": "Block",
															"src": "13939:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "13957:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1969,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:6"
																},
																{
																	"expression": {
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1970,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13988:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1973,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1976,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "14028:95:6",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "14049:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1981,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14067:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1984,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:6"
																},
																{
																	"expression": {
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14097:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14140:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2005,
														"nodeType": "IfStatement",
														"src": "14136:95:6",
														"trueBody": {
															"id": 2004,
															"nodeType": "Block",
															"src": "14157:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1996,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14175:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1999,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:6"
																},
																{
																	"expression": {
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14205:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2003,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14248:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2020,
														"nodeType": "IfStatement",
														"src": "14244:95:6",
														"trueBody": {
															"id": 2019,
															"nodeType": "Block",
															"src": "14265:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14283:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2014,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:6"
																},
																{
																	"expression": {
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14313:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2018,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "14352:64:6",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "14372:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14390:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2033,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1958,
													"src": "14442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1956,
												"id": 2034,
												"nodeType": "Return",
												"src": "14435:13:6"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:6"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13846:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:6"
									},
									"scope": 2094,
									"src": "13792:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "14692:177:6",
										"statements": [
											{
												"id": 2072,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:6",
												"statements": [
													{
														"assignments": [
															2048
														],
														"declarations": [
															{
																"constant": false,
																"id": 2048,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2072,
																"src": "14726:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2052,
														"initialValue": {
															"arguments": [
																{
																	"id": 2050,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "14750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2049,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2036,
																	2074
																],
																"referencedDeclaration": 2036,
																"src": "14743:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "14777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2055,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2042,
																						"src": "14804:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2054,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "14787:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2057,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2060,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2058,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2048,
																									"src": "14823:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2059,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2061,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2063,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2039,
																					"src": "14838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2071,
														"nodeType": "Return",
														"src": "14770:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14626:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14641:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2040,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "14641:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "14641:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:6"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14683:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:6"
									},
									"scope": 2094,
									"src": "14610:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "15067:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "15090:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1051",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1051",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2091,
												"nodeType": "Return",
												"src": "15077:31:6"
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "15019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2076,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "15019:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "15019:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:6"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "15061:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:6"
									},
									"scope": 2094,
									"src": "14993:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "203:14914:6",
							"usedErrors": [
								1046
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2199
						]
					},
					"id": 2200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2097,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2199,
							"linearizedBaseContracts": [
								2199
							],
							"name": "SignedMath",
							"nameLocation": "224:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "376:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "393:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "397:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "405:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:7",
													"trueExpression": {
														"id": 2110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "401:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2113,
												"nodeType": "Return",
												"src": "386:20:7"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "325:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2099,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "335:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:7"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "368:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:7"
									},
									"scope": 2199,
									"src": "312:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "555:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2125,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2126,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "576:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2129,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "584:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:7",
													"trueExpression": {
														"id": 2128,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "580:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2124,
												"id": 2131,
												"nodeType": "Return",
												"src": "565:20:7"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "504:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2117,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "514:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:7"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "547:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:7"
									},
									"scope": 2199,
									"src": "491:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "797:162:7",
										"statements": [
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2176,
														"src": "859:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2143,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2145,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "871:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2146,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2138,
																	"src": "875:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2149,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "882:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2150,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "886:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2152,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2155,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2158,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "911:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2163,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2144,
																						"src": "931:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2161,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2159,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2168,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "945:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2169,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "949:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2171,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2175,
												"nodeType": "Return",
												"src": "904:48:7"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "746:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2135,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "756:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2137,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:7"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "789:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:7"
									},
									"scope": 2199,
									"src": "729:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "1103:158:7",
										"statements": [
											{
												"id": 2196,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2187,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "1228:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:7",
																		"subExpression": {
																			"id": 2191,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "1242:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:7",
																	"trueExpression": {
																		"id": 2190,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "1237:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2184,
														"id": 2195,
														"nodeType": "Return",
														"src": "1213:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1061:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:7"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1094:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:7"
									},
									"scope": 2199,
									"src": "1048:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2200,
							"src": "216:1047:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:7"
				},
				"id": 7
			},
			"contracts/MyERC20.sol": {
				"ast": {
					"absolutePath": "contracts/MyERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Math": [
							2094
						],
						"MyERC20": [
							2339
						],
						"MyStringUtils": [
							2482
						],
						"SignedMath": [
							2199
						],
						"Strings": [
							1040
						]
					},
					"id": 2340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2201,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2340,
							"sourceUnit": 652,
							"src": "56:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2340,
							"sourceUnit": 1041,
							"src": "113:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/MyStringUtils.sol",
							"file": "contracts/utils/MyStringUtils.sol",
							"id": 2204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2340,
							"sourceUnit": 2483,
							"src": "166:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2339,
							"linearizedBaseContracts": [
								2339
							],
							"name": "MyERC20",
							"nameLocation": "262:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "552:744:8",
										"statements": [
											{
												"assignments": [
													2212
												],
												"declarations": [
													{
														"constant": false,
														"id": 2212,
														"mutability": "mutable",
														"name": "decimal",
														"nameLocation": "568:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "563:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2211,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "563:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"hexValue": "3138",
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "578:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "563:17:8"
											},
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "entireNumber",
														"nameLocation": "604:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "591:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2215,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "591:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2221,
												"initialValue": {
													"arguments": [
														{
															"id": 2219,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "630:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2217,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "619:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "623:6:8",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "619:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "591:46:8"
											},
											{
												"assignments": [
													2223
												],
												"declarations": [
													{
														"constant": false,
														"id": 2223,
														"mutability": "mutable",
														"name": "dividedNumber",
														"nameLocation": "684:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "679:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "679:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2229,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2224,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "700:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "713:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "709:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "700:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "679:36:8"
											},
											{
												"assignments": [
													2231
												],
												"declarations": [
													{
														"constant": false,
														"id": 2231,
														"mutability": "mutable",
														"name": "convertedNumber",
														"nameLocation": "741:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "727:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2230,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "727:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2236,
												"initialValue": {
													"arguments": [
														{
															"id": 2234,
															"name": "dividedNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "776:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2232,
															"name": "Strings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "759:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Strings_$1040_$",
																"typeString": "type(library Strings)"
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "767:8:8",
														"memberName": "toString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "759:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "727:63:8"
											},
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "lastNumber",
														"nameLocation": "844:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "831:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2237,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "831:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2243,
												"initialValue": {
													"arguments": [
														{
															"id": 2241,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "867:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "857:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2239,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "861:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:44:8"
											},
											{
												"assignments": [
													2245
												],
												"declarations": [
													{
														"constant": false,
														"id": 2245,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "891:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "886:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2244,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "886:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2249,
												"initialValue": {
													"arguments": [
														{
															"id": 2247,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "911:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2246,
														"name": "getUintLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "897:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "886:32:8"
											},
											{
												"assignments": [
													2251
												],
												"declarations": [
													{
														"constant": false,
														"id": 2251,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "934:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "929:6:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2250,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "929:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2253,
												"initialValue": {
													"hexValue": "31",
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "936:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "929:8:8"
											},
											{
												"body": {
													"id": 2297,
													"nodeType": "Block",
													"src": "979:215:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2266,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "997:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2267,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "1001:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "997:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1004:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "997:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2292,
																"nodeType": "Block",
																"src": "1111:54:8",
																"statements": [
																	{
																		"expression": {
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2286,
																					"name": "lastNumber",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "1130:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2288,
																				"indexExpression": {
																					"id": 2287,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2255,
																					"src": "1141:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1130:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1146:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																					"typeString": "literal_string \"0\""
																				},
																				"value": "0"
																			},
																			"src": "1130:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 2291,
																		"nodeType": "ExpressionStatement",
																		"src": "1130:19:8"
																	}
																]
															},
															"id": 2293,
															"nodeType": "IfStatement",
															"src": "994:171:8",
															"trueBody": {
																"id": 2285,
																"nodeType": "Block",
																"src": "1006:101:8",
																"statements": [
																	{
																		"assignments": [
																			2272
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2272,
																				"mutability": "mutable",
																				"name": "c",
																				"nameLocation": "1032:1:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 2285,
																				"src": "1025:8:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"typeName": {
																					"id": 2271,
																					"name": "bytes1",
																					"nodeType": "ElementaryTypeName",
																					"src": "1025:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2278,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2273,
																				"name": "entireNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "1036:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2277,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2274,
																					"name": "len",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2245,
																					"src": "1049:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2275,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "1053:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1049:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1036:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1025:30:8"
																	},
																	{
																		"expression": {
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2279,
																					"name": "lastNumber",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "1074:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2281,
																				"indexExpression": {
																					"id": 2280,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2255,
																					"src": "1085:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1074:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2282,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2272,
																				"src": "1090:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"src": "1074:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 2284,
																		"nodeType": "ExpressionStatement",
																		"src": "1074:17:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1179:3:8",
																"subExpression": {
																	"id": 2294,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "1179:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2296,
															"nodeType": "ExpressionStatement",
															"src": "1179:3:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2260,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "970:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "972:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "970:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"initializationExpression": {
													"assignments": [
														2255
													],
													"declarations": [
														{
															"constant": false,
															"id": 2255,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "957:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 2298,
															"src": "952:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2254,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2259,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2256,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "959:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "967:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "959:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "952:16:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "975:3:8",
														"subExpression": {
															"id": 2263,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "975:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2265,
													"nodeType": "ExpressionStatement",
													"src": "975:3:8"
												},
												"nodeType": "ForStatement",
												"src": "948:246:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2305,
																			"name": "convertedNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "1252:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		{
																			"hexValue": "2e",
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																				"typeString": "literal_string \".\""
																			},
																			"value": "."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																				"typeString": "literal_string \".\""
																			}
																		],
																		"expression": {
																			"id": 2303,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1235:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1239:12:8",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1235:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1235:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2308,
																	"name": "lastNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "1275:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1218:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1222:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1218:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1218:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1211:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2299,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1211:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2210,
												"id": 2311,
												"nodeType": "Return",
												"src": "1204:83:8"
											}
										]
									},
									"functionSelector": "212e31d6",
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToSmallerUnit",
									"nameLocation": "482:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "508:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "503:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:13:8"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "537:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:15:8"
									},
									"scope": 2339,
									"src": "473:823:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "1365:146:8",
										"statements": [
											{
												"assignments": [
													2321
												],
												"declarations": [
													{
														"constant": false,
														"id": 2321,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1381:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "1376:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2320,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1376:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2322,
												"nodeType": "VariableDeclarationStatement",
												"src": "1376:11:8"
											},
											{
												"body": {
													"id": 2333,
													"nodeType": "Block",
													"src": "1418:62:8",
													"statements": [
														{
															"expression": {
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1433:8:8",
																"subExpression": {
																	"id": 2326,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "1433:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2328,
															"nodeType": "ExpressionStatement",
															"src": "1433:8:8"
														},
														{
															"expression": {
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2329,
																	"name": "number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "1456:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1466:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1456:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2332,
															"nodeType": "ExpressionStatement",
															"src": "1456:12:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2323,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "1405:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1405:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2334,
												"nodeType": "WhileStatement",
												"src": "1398:82:8"
											},
											{
												"expression": {
													"id": 2335,
													"name": "length",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2321,
													"src": "1497:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2336,
												"nodeType": "Return",
												"src": "1490:13:8"
											}
										]
									},
									"functionSelector": "661a03da",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUintLength",
									"nameLocation": "1311:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "1330:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "1325:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:13:8"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "1359:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1359:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:6:8"
									},
									"scope": 2339,
									"src": "1302:209:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2340,
							"src": "253:1261:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1481:8"
				},
				"id": 8
			},
			"contracts/utils/MyStringUtils.sol": {
				"ast": {
					"absolutePath": "contracts/utils/MyStringUtils.sol",
					"exportedSymbols": {
						"MyStringUtils": [
							2482
						]
					},
					"id": 2483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2341,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "55:21:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyStringUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2482,
							"linearizedBaseContracts": [
								2482
							],
							"name": "MyStringUtils",
							"nameLocation": "86:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "197:355:9",
										"statements": [
											{
												"assignments": [
													2351
												],
												"declarations": [
													{
														"constant": false,
														"id": 2351,
														"mutability": "mutable",
														"name": "s1",
														"nameLocation": "221:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 2425,
														"src": "208:15:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2350,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "208:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2356,
												"initialValue": {
													"arguments": [
														{
															"id": 2354,
															"name": "str1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "232:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "226:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2352,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "226:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "226:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "208:29:9"
											},
											{
												"assignments": [
													2358
												],
												"declarations": [
													{
														"constant": false,
														"id": 2358,
														"mutability": "mutable",
														"name": "s2",
														"nameLocation": "261:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 2425,
														"src": "248:15:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2363,
												"initialValue": {
													"arguments": [
														{
															"id": 2361,
															"name": "str2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "272:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "266:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2359,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "266:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "266:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "248:29:9"
											},
											{
												"assignments": [
													2365
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "301:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 2425,
														"src": "288:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "288:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2374,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2368,
																	"name": "s1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "317:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "320:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "317:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 2370,
																	"name": "s2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "329:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "332:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "329:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "317:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "307:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "311:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "307:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "288:51:9"
											},
											{
												"body": {
													"id": 2394,
													"nodeType": "Block",
													"src": "381:41:9",
													"statements": [
														{
															"expression": {
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2386,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2365,
																		"src": "396:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2388,
																	"indexExpression": {
																		"id": 2387,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2376,
																		"src": "400:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "396:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2389,
																		"name": "s1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "405:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2391,
																	"indexExpression": {
																		"id": 2390,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2376,
																		"src": "408:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "405:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "396:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2393,
															"nodeType": "ExpressionStatement",
															"src": "396:14:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2379,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "364:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2380,
															"name": "s1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "366:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "369:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "366:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "364:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2395,
												"initializationExpression": {
													"assignments": [
														2376
													],
													"declarations": [
														{
															"constant": false,
															"id": 2376,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "359:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2395,
															"src": "354:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2375,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "354:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2378,
													"initialValue": {
														"hexValue": "30",
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "361:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "354:8:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "377:3:9",
														"subExpression": {
															"id": 2383,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "377:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2385,
													"nodeType": "ExpressionStatement",
													"src": "377:3:9"
												},
												"nodeType": "ForStatement",
												"src": "350:72:9"
											},
											{
												"body": {
													"id": 2418,
													"nodeType": "Block",
													"src": "463:53:9",
													"statements": [
														{
															"expression": {
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2407,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2365,
																		"src": "478:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2412,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2408,
																				"name": "s1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "482:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "485:6:9",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "482:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2410,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2397,
																			"src": "494:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "482:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "478:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2413,
																		"name": "s2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2358,
																		"src": "499:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2415,
																	"indexExpression": {
																		"id": 2414,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2397,
																		"src": "502:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "499:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "478:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2417,
															"nodeType": "ExpressionStatement",
															"src": "478:26:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2397,
														"src": "446:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2401,
															"name": "s2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "448:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "451:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "448:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "446:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2419,
												"initializationExpression": {
													"assignments": [
														2397
													],
													"declarations": [
														{
															"constant": false,
															"id": 2397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "441:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2419,
															"src": "436:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2396,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "436:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2399,
													"initialValue": {
														"hexValue": "30",
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "443:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "436:8:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "459:3:9",
														"subExpression": {
															"id": 2404,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "459:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2406,
													"nodeType": "ExpressionStatement",
													"src": "459:3:9"
												},
												"nodeType": "ForStatement",
												"src": "432:84:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2422,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "540:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "533:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2420,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "533:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2349,
												"id": 2424,
												"nodeType": "Return",
												"src": "526:18:9"
											}
										]
									},
									"functionSelector": "d824ccf3",
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "strcat",
									"nameLocation": "115:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "str1",
												"nameLocation": "136:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "122:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "122:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "str2",
												"nameLocation": "156:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "142:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "142:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "121:40:9"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "182:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "182:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:15:9"
									},
									"scope": 2482,
									"src": "106:446:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "658:250:9",
										"statements": [
											{
												"assignments": [
													2438
												],
												"declarations": [
													{
														"constant": false,
														"id": 2438,
														"mutability": "mutable",
														"name": "strBytes",
														"nameLocation": "682:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 2480,
														"src": "669:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2437,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "669:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"arguments": [
														{
															"id": 2441,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "699:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "693:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2439,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "693:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "669:34:9"
											},
											{
												"assignments": [
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "endStr",
														"nameLocation": "727:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2480,
														"src": "714:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "714:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2448,
																"name": "endInd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "746:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2449,
																"name": "startInd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "755:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "736:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2446,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "740:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "714:50:9"
											},
											{
												"body": {
													"id": 2473,
													"nodeType": "Block",
													"src": "810:59:9",
													"statements": [
														{
															"expression": {
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2463,
																		"name": "endStr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2445,
																		"src": "825:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2467,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2464,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "832:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2465,
																			"name": "startInd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2430,
																			"src": "834:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "832:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "825:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2468,
																		"name": "strBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "846:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2470,
																	"indexExpression": {
																		"id": 2469,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "855:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "846:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "825:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2472,
															"nodeType": "ExpressionStatement",
															"src": "825:32:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2457,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "796:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2458,
														"name": "endInd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "798:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "796:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2474,
												"initializationExpression": {
													"assignments": [
														2454
													],
													"declarations": [
														{
															"constant": false,
															"id": 2454,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "784:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2474,
															"src": "779:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2453,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "779:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2456,
													"initialValue": {
														"id": 2455,
														"name": "startInd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "786:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "779:15:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "806:3:9",
														"subExpression": {
															"id": 2460,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "806:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2462,
													"nodeType": "ExpressionStatement",
													"src": "806:3:9"
												},
												"nodeType": "ForStatement",
												"src": "775:94:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2477,
															"name": "endStr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "893:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "886:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2475,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "886:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2479,
												"nodeType": "Return",
												"src": "879:21:9"
											}
										]
									},
									"functionSelector": "1dcd9b55",
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substring",
									"nameLocation": "567:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "591:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "577:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "577:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "startInd",
												"nameLocation": "601:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "596:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "596:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "endInd",
												"nameLocation": "616:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "611:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "611:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:47:9"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "644:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:15:9"
									},
									"scope": 2482,
									"src": "558:350:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2483,
							"src": "78:833:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "55:856:9"
				},
				"id": 9
			}
		}
	}
}